name: ci
run-name: CarpetX tests
on: [push]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install packages
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get --no-install-recommends --yes install \
              build-essential \
              ca-certificates \
              g++ \
              gfortran \
              git \
              hdf5-tools \
              libboost-all-dev \
              libfftw3-dev \
              libgit2-dev \
              libgsl-dev \
              libhdf5-dev \
              libhwloc-dev \
              libopenblas-dev \
              libopenmpi-dev \
              libpetsc-real-dev \
              libudev-dev \
              perl \
              pkg-config \
              python2 \
              python3 \
              python3-pip \
              python3-requests \
              rsync \
              subversion \
              wget \
              zlib1g-dev
      - name: Restore dependencies from cache
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          # Note: Change this key if the dependencies change, e.g. if we install newer versions
          # Update the respective file name in `install_dependencies.sh` as well
          key: dependencies-3
          path: |
            /home/runner/opt
      - name: Install dependencies
        if: ${{steps.cache-dependencies.outputs.cache-hit != 'true'}}
        run: |
          .github/workflows/install_dependencies.sh
      - name: Download Cactus
        run: |
          # Working directory starts out as
          # `/home/runner/work/CarpetX/CarpetX`, inside the CarpetX
          # repo
          cd ..
          # Download the Cactus installer
          wget https://raw.githubusercontent.com/gridaphobe/CRL/ET_2022_11/GetComponents
          chmod a+x GetComponents
          # Download Cactus thorns
          ./GetComponents --parallel https://bitbucket.org/einsteintoolkit/manifest/raw/ET_2022_11/einsteintoolkit.th
          cd Cactus

          # Download old CarpetX thorns for the external libraries there
          pushd repos
          git clone https://bitbucket.org/eschnett/cactusamrex
          popd
          pushd arrangements/ExternalLibraries
          ln -s ../../repos/cactusamrex/ADIOS2 .
          ln -s ../../repos/cactusamrex/AMReX .
          ln -s ../../repos/cactusamrex/Boost .
          ln -s ../../repos/cactusamrex/NSIMD .
          ln -s ../../repos/cactusamrex/Silo .
          ln -s ../../repos/cactusamrex/openPMD .
          ln -s ../../repos/cactusamrex/yaml_cpp .
          popd

          # Create a link to the CarpetX repository
          ln -s ../../CarpetX Cactus/repos
          # Create links for the CarpetX thorns
          mkdir -p arrangements/CarpetX
          pushd arrangements/CarpetX
          ln -s ../../repos/CarpetX/* .
          popd
      - name: Build Cactus
        run: |
          # Set up SimFactory
          cd ../Cactus
          cp repos/CarpetX/.github/workflows/actions.cfg ./simfactory/mdb/optionlists
          cp repos/CarpetX/.github/workflows/actions.ini ./simfactory/mdb/machines
          cp repos/CarpetX/.github/workflows/actions.run ./simfactory/mdb/runscripts
          cp repos/CarpetX/.github/workflows/actions.sub ./simfactory/mdb/submitscripts
          cp repos/CarpetX/.github/workflows/actions.th .
          cp repos/CarpetX/.github/workflows/defs.local.ini ./simfactory/etc
          # Build
          ./simfactory/bin/sim --machine=actions build sim
      # - name: Run Cactus tests
