# Schedule definitions for thorn AsterX

STORAGE: dens mom tau dB Psi HydroBase::Bvec dBx_stag dBy_stag dBz_stag
STORAGE: flux_x flux_y flux_z
STORAGE: densrhs momrhs taurhs Avec_x_rhs Avec_y_rhs Avec_z_rhs Psi_rhs
STORAGE: ADMBase::metric ADMBase::lapse ADMBase::shift ADMBase::curv
STORAGE: Aux_in_RHSof_A_Psi


if(unit_test)
{
  SCHEDULE AsterX_Test AT wragh
  {
    LANG: C
    OPTIONS: meta
  } "Self-test"
}

SCHEDULE AsterX_EstimateError_Setup AT wragh
{
  LANG: C
  OPTIONS: GLOBAL
} "set up for calculating regrid error"

# Initial conditions

SCHEDULE AsterX_ComputedBstagFromA AT initial AFTER HydroBase_PostInitial BEFORE AsterX_ComputedBFromdBstag
{
  LANG: C
  READS: Avec_x(everywhere) Avec_y(everywhere) Avec_z(everywhere)
  WRITES: dBx_stag(interior) dBy_stag(interior) dBz_stag(interior)
  SYNC: dBx_stag dBy_stag dBz_stag
} "Calculate dBstag from curl of A"

SCHEDULE AsterX_ComputedBFromdBstag AT initial BEFORE AsterX_ComputeBFromdB
{
  LANG: C
  READS: dBx_stag(everywhere) dBy_stag(everywhere) dBz_stag(everywhere)
  WRITES: dB(interior)
  SYNC: dB
} "Calculate centered dB from dBstag"

SCHEDULE AsterX_ComputeBFromdB AT initial BEFORE AsterX_Prim2Con_Initial
{
  LANG: C
  READS: dB(interior) ADMBase::metric(interior)
  WRITES: HydroBase::Bvec(interior)
  SYNC: HydroBase::Bvec
} "Calculate centered B from densitized B"

SCHEDULE AsterX_Prim2Con_Initial AT initial AFTER HydroBase_PostInitial
{
  LANG: C
  READS: ADMBase::metric(interior) ADMBase::lapse(interior) ADMBase::shift(interior)
  READS: HydroBase::rho(interior) HydroBase::vel(interior) HydroBase::eps(interior) HydroBase::press(interior) HydroBase::Bvec(interior)
  WRITES: dens(interior) tau(interior) mom(interior) dB(interior)
  WRITES: Psi(everywhere)
  WRITES: saved_prims
  SYNC: dens tau mom dB
  SYNC: saved_prims
} "Compute conserved variables from primitive variables at initial"

SCHEDULE AsterX_EstimateError IN ODESolvers_EstimateError
{
  LANG: C
  READS: HydroBase::rho(everywhere) HydroBase::vel(everywhere) HydroBase::eps(everywhere) HydroBase::press(everywhere)
  WRITES: CarpetX::regrid_error(interior)
} "Estimate local error for regridding initial conditions"

# Regridding

SCHEDULE AsterX_Sync AT postregrid
{
  LANG: C
  OPTIONS: global
  SYNC: dens tau mom
  SYNC: saved_prims
} "Synchronize"

# Time stepping

SCHEDULE AsterX_ComputedBstagFromA IN ODESolvers_RHS BEFORE AsterX_Con2Prim
{
  LANG: C
  READS: Avec_x(everywhere) Avec_y(everywhere) Avec_z(everywhere)
  WRITES: dBx_stag(interior) dBy_stag(interior) dBz_stag(interior)
  SYNC: dBx_stag dBy_stag dBz_stag
} "Calculate dBstag from curl of A"

SCHEDULE AsterX_ComputedBFromdBstag IN ODESolvers_RHS AFTER AsterX_ComputedBstagFromA BEFORE AsterX_Con2Prim 
{
  LANG: C
  READS: dBx_stag(everywhere) dBy_stag(everywhere) dBz_stag(everywhere)
  WRITES: dB(interior)
  SYNC: dB
} "Calculate centered dB from dBstag"


SCHEDULE AsterX_Con2Prim IN ODESolvers_RHS BEFORE AsterX_EstimateError
{
  LANG: C
  READS: ADMBase::metric(interior) ADMBase::lapse(interior) ADMBase::shift(interior)
  READS: dens(interior) tau(interior) mom(interior) dB(interior)
  READS: saved_prims(interior)
  READS: Avec_x(interior) Avec_y(interior) Avec_z(interior)
  WRITES: con2prim_flag(interior)
  WRITES: HydroBase::rho(interior) HydroBase::vel(interior) HydroBase::eps(interior) HydroBase::press(interior) HydroBase::Bvec(interior)
  WRITES: saved_prims(interior)
  WRITES: dens(interior) tau(interior) mom(interior)
  SYNC: con2prim_flag
  SYNC: HydroBase::rho HydroBase::vel HydroBase::eps HydroBase::press HydroBase::Bvec
  SYNC: saved_prims
  SYNC: dens tau mom
} "Calculate primitive variables from conservative variables"

if (interpolate_failed_c2p)
{
  SCHEDULE AsterX_Con2Prim_Interpolate_Failed IN ODESolvers_RHS BEFORE AsterX_Fluxes
  AFTER AsterX_Con2Prim
  {
    LANG: C
    READS: ADMBase::metric(interior)
    READS: con2prim_flag(interior)
    READS: HydroBase::rho(interior) HydroBase::vel(interior) HydroBase::eps(interior) HydroBase::press(interior) HydroBase::Bvec(interior)
    READS: saved_prims(interior)
    READS: dens(interior) tau(interior) mom(interior)
    WRITES: con2prim_flag(interior)
    WRITES: HydroBase::rho(interior) HydroBase::vel(interior) HydroBase::eps(interior) HydroBase::press(interior)
    WRITES: saved_prims(interior)
    WRITES: dens(interior) tau(interior) mom(interior)
    SYNC: con2prim_flag
    SYNC: HydroBase::rho HydroBase::vel HydroBase::eps HydroBase::press
    SYNC: saved_prims
    SYNC: dens tau mom
  } "Interpolate those grid points where con2prim failed"
}
  
SCHEDULE AsterX_Fluxes IN ODESolvers_RHS AFTER AsterX_Con2Prim
{
  LANG: C
  READS: ADMBase::metric(everywhere)
  READS: ADMBase::lapse(everywhere)
  READS: ADMBase::shift(everywhere)
  READS: dens(everywhere) tau(everywhere) mom(everywhere)
  READS: HydroBase::rho(everywhere) HydroBase::vel(everywhere) HydroBase::press(everywhere) HydroBase::eps(everywhere)
  READS: HydroBase::Bvec(everywhere)
  READS: Avec_x(everywhere) Avec_y(everywhere) Avec_z(everywhere) Psi(everywhere)
  WRITES: flux_x(interior) flux_y(interior) flux_z(interior)
  WRITES: Aux_in_RHSof_A_Psi(interior)
  SYNC: Aux_in_RHSof_A_Psi
  SYNC: flux_x flux_y flux_z
} "Calculate the hydro fluxes"

SCHEDULE AsterX_SourceTerms IN ODESolvers_RHS AFTER AsterX_Fluxes 
{
  LANG: C
  READS: ADMBase::metric(everywhere)
  READS: ADMBase::lapse(everywhere)
  READS: ADMBase::shift(everywhere)
  READS: ADMBase::curv(everywhere)
  READS: HydroBase::rho(everywhere) HydroBase::vel(everywhere) HydroBase::press(everywhere) HydroBase::eps(everywhere)
  READS: HydroBase::Bvec(everywhere)
  WRITES: densrhs(interior) taurhs(interior) momrhs(interior)
  SYNC: densrhs taurhs momrhs
} "Calculate the source terms and compute the RHS of the hydro equations"

SCHEDULE AsterX_RHS IN ODESolvers_RHS AFTER AsterX_SourceTerms
{
  LANG: C
  READS: ADMBase::metric(everywhere) ADMBase::lapse(everywhere) ADMBase::shift(everywhere)
  READS: flux_x(everywhere) flux_y(everywhere) flux_z(everywhere)
  READS: densrhs(everywhere) taurhs(everywhere) momrhs(everywhere)
  READS: Psi(everywhere)
  READS: Aux_in_RHSof_A_Psi(everywhere)
  WRITES: densrhs(everywhere) taurhs(everywhere) momrhs(everywhere)
  WRITES: Avec_x_rhs(interior) Avec_y_rhs(interior) Avec_z_rhs(interior) Psi_rhs(interior)
  SYNC: Avec_x_rhs Avec_y_rhs Avec_z_rhs Psi_rhs
} "Update the RHS of the hydro equations with the flux contributions"

SCHEDULE AsterX_Sync IN ODESolvers_PostStep
{
  LANG: C
  OPTIONS: global
  SYNC: dens tau mom Avec_x Avec_y Avec_z Psi
} "Synchronize"
