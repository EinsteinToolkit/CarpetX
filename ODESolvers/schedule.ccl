# Schedule definitions for thorn ODESolvers

SCHEDULE ODESolvers_Solve AT evol
{
  LANG: C
  OPTIONS: level
} "Solve ODEs loop"



# CarpetX scheduled groups:
#
# Startup:
#   STARTUP (special)
#   WRAGH
#   PARAMCHECK
#
# Initialization:
#   Initialization loop:
#     If regridding:
#       [regrid]
#       BASEGRID (in driver)
#       POSTREGRID (in driver, except for initial coarsest level that is created from scratch)
#     InputGH
#     INITIAL
#     POSTINITIAL
#     POSTPOSTINITIAL
#   (disabled) [restrict]
#   (disabled) POSTRESTRICT
#   POSTSTEP
#   CPINITIAL
#   ANALYSIS
#   OutputGH
#
# Time evolution loop:
#   If regridding:
#     [regrid]
#     BASEGRID (in driver)
#     POSTREGRID (in driver)
#   [cycle time levels]
#   PRESTEP
#   EVOL
#   [reflux]
#   (disabled) [restrict]
#   (disabled) POSTRESTRICT
#   POSTSTEP
#   CHECKPOINT
#   ANALYSIS
#   OutputGH
#
# Shutdown:
#   TERMINATE
#   SHUTDOWN (special)



# Desirable schedule groups:
#
# Initial condition loop:
#   BaseGrid: Set up constants (e.g. coordinates) everywhere on the grid
#   Initial: Set up initial conditions on interior of state vector
#   PostStep: Apply boundary conditions to state vector, and project if necessary
#   EstimateError: Estimate discretization error (for regridding)
# Analysis: Calculate analysis quantities everywhere
#
# Time evolution loop:
#   EstimateError: Estimate discretization error (for regridding)
#   If regridding:
#     [regrid]
#     BaseGrid: Set up constants (e.g. coordinates) everywhere on the grid
#     [interpolate]
#     PostStep: Apply boundary conditions to state vector, and project if necessary
#   Time stepping loop:
#     RHS: Evaluate RHS for of state vector everywhere on the grid
#     [time step]
#     PostStep: Apply boundary conditions to state vector, and project if necessary
#   Analysis: Calculate analysis quantities everywhere



# BaseGrid: Set up constants (e.g. coordinates) everywhere on the grid
# Initial: Set up initial conditions on interior of state vector
# PostStep: Apply boundary conditions to state vector, and project if necessary
# EstimateError: Estimate discretization error (for regridding)
# Analysis: Calculate analysis quantities everywhere
# RHS: Evaluate RHS for of state vector everywhere on the grid

# TODO: Use only interior of RHS in ODESolver



# Initialization

  SCHEDULE GROUP ODESolvers_BaseGrid AT basegrid
  {
  } "Set up constants (e.g. coordinates) everywhere on the grid"
  
  SCHEDULE GROUP ODESolvers_Initial AT initial
  {
  } "Set up initial conditions on interior of state vector"
  
  SCHEDULE GROUP ODESolvers_PostStep AT postinitial
  {
  } "Apply boundary conditions to state vector, and project if necessary"
  
  SCHEDULE GROUP ODESolvers_RHS AT postinitial AFTER ODESolvers_PostStep
  {
  } "Evaluate RHS for of state vector everywhere on the grid"

  SCHEDULE GROUP ODESolvers_NonStiffRHS AT postinitial AFTER ODESolvers_PostStep
  {
  } "Evaluate non stiff RHS for of state vector everywhere on the grid"
  
  SCHEDULE GROUP ODESolvers_EstimateError AT postinitial AFTER (ODESolvers_PostStep, ODESolvers_RHS)
  {
  } "Estimate discretization error (for regridding)"

# Time evolution

  # This group will also be scheduled dynamically from ODESolvers_solve
  SCHEDULE GROUP ODESolvers_PostStep AT poststep
  {
  } "Apply boundary conditions to state vector, and project if necessary"
  
  # This group will also be scheduled dynamically from ODESolvers_solve
  SCHEDULE GROUP ODESolvers_RHS AT poststep AFTER ODESolvers_PostStep
  {
  } "Evaluate the RHS for of state vector everywhere on the grid"
  
  SCHEDULE GROUP ODESolvers_NonStiffRHS AT poststep AFTER ODESolvers_PostStep
  {
  } "Evaluate the non stiff RHS of state vector everywhere on the grid"

  SCHEDULE GROUP ODESolvers_ImplicitStep
  {
  } "Take an implicit step everywhere on the grid"
  
  SCHEDULE GROUP ODESolvers_EstimateError AT poststep AFTER (ODESolvers_PostStep, ODESolvers_RHS)
  {
  } "Estimate discretization error (for regridding)"

# Regridding

  SCHEDULE GROUP ODESolvers_PostStep AT postregrid
  {
  } "Apply boundary conditions to state vector, and project if necessary"

# Restricting

  SCHEDULE GROUP ODESolvers_PostStep AT postrestrict
  {
  } "Apply boundary conditions to state vector, and project if necessary"

# Analysis

  SCHEDULE GROUP ODESolvers_Analysis AT analysis
  {
  } "Calculate analysis quantities everywhere"
