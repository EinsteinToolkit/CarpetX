#include <cmath>

namespace HybridMethods {

template <typename T> static inline auto rk422_sol_1_b0(T a20, T a21) -> T {
  using std::pow;
  using std::sqrt;
  return (648 * pow(a20, 6) + 1820 * pow(a21, 3) - 12393 * pow(a21, 4) +
          11898 * pow(a21, 5) - 1512 * pow(a21, 6) +
          18 * pow(a20, 5) * (425 + 96 * a21) -
          9 * pow(a20, 4) * (-799 + 198 * a21 + 120 * pow(a21, 2)) -
          18 * pow(a20, 2) * a21 *
              (-2338 + 187 * a21 + 1714 * pow(a21, 2) + 660 * pow(a21, 3)) -
          3 * a20 * pow(a21, 2) *
              (6167 - 13464 * a21 - 3654 * pow(a21, 2) + 2304 * pow(a21, 3)) -
          pow(a20, 3) *
              (27559 + 48960 * a21 + 39348 * pow(a21, 2) + 8640 * pow(a21, 3)) +
          sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
               pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                       pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                       2 * a20 * a21 * (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                       pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                   2))) /
         (6. * (a20 + a21) *
          (216 * pow(a20, 5) + 6 * pow(a20, 4) * (89 + 60 * a21) -
           pow(a20, 3) * (571 + 816 * a21 + 720 * pow(a21, 2)) +
           pow(a21, 2) *
               (-91 + 515 * a21 + 102 * pow(a21, 2) - 504 * pow(a21, 3)) -
           a20 * a21 *
               (-784 + 297 * a21 + 1680 * pow(a21, 2) + 1800 * pow(a21, 3)) -
           pow(a20, 2) *
               (889 + 1383 * a21 + 3132 * pow(a21, 2) + 2160 * pow(a21, 3))));
}

template <typename T> static inline auto rk422_sol_1_b1(T a20, T a21) -> T {
  using std::pow;
  using std::sqrt;
  return (273812 * pow(a20, 3) - 493549 * pow(a20, 4) - 90372 * pow(a20, 5) +
          155268 * pow(a20, 6) + 40176 * pow(a20, 7) -
          285033 * pow(a20, 2) * a21 + 558950 * pow(a20, 3) * a21 -
          881484 * pow(a20, 4) * a21 + 52200 * pow(a20, 5) * a21 +
          147312 * pow(a20, 6) * a21 + 66444 * a20 * pow(a21, 2) +
          573888 * pow(a20, 2) * pow(a21, 2) -
          599448 * pow(a20, 3) * pow(a21, 2) -
          1119780 * pow(a20, 4) * pow(a21, 2) +
          40176 * pow(a20, 5) * pow(a21, 2) - 4459 * pow(a21, 3) -
          428806 * a20 * pow(a21, 3) + 908520 * pow(a20, 2) * pow(a21, 3) -
          1895760 * pow(a20, 3) * pow(a21, 3) -
          602640 * pow(a20, 4) * pow(a21, 3) + 49805 * pow(a21, 4) +
          541308 * a20 * pow(a21, 4) - 775620 * pow(a20, 2) * pow(a21, 4) -
          1272240 * pow(a20, 3) * pow(a21, 4) - 175548 * pow(a21, 5) +
          327528 * a20 * pow(a21, 5) - 1165104 * pow(a20, 2) * pow(a21, 5) +
          224100 * pow(a21, 6) - 522288 * a20 * pow(a21, 6) -
          93744 * pow(a21, 7) -
          7 * sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          10 * a20 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          10 * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2))) /
         (42. * (a20 + a21) *
          (2 * pow(a20, 2) + a21 * (-3 + 2 * a21) + a20 * (9 + 4 * a21)) *
          (216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
           2 * a20 * a21 * (-392 + 495 * a21 + 648 * pow(a21, 2)) -
           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2))));
}

template <typename T> static inline auto rk422_sol_1_b2(T a20, T a21) -> T {
  using std::pow;
  using std::sqrt;
  return (273812 * pow(a20, 3) - 193956 * pow(a20, 4) + 21156 * pow(a20, 5) +
          4248 * pow(a20, 6) - 12960 * pow(a20, 7) -
          285033 * pow(a20, 2) * a21 + 755244 * pow(a20, 3) * a21 -
          152304 * pow(a20, 4) * a21 - 28512 * pow(a20, 5) * a21 -
          47520 * pow(a20, 6) * a21 + 66444 * a20 * pow(a21, 2) +
          359352 * pow(a20, 2) * pow(a21, 2) +
          438504 * pow(a20, 3) * pow(a21, 2) +
          9720 * pow(a20, 4) * pow(a21, 2) - 12960 * pow(a20, 5) * pow(a21, 2) -
          4459 * pow(a21, 3) - 523572 * a20 * pow(a21, 3) +
          1155696 * pow(a20, 2) * pow(a21, 3) +
          408960 * pow(a20, 3) * pow(a21, 3) +
          194400 * pow(a20, 4) * pow(a21, 3) + 66276 * pow(a21, 4) +
          280884 * a20 * pow(a21, 4) + 819720 * pow(a20, 2) * pow(a21, 4) +
          410400 * pow(a20, 3) * pow(a21, 4) - 262848 * pow(a21, 5) +
          619488 * a20 * pow(a21, 5) + 375840 * pow(a20, 2) * pow(a21, 5) +
          166248 * pow(a21, 6) + 168480 * a20 * pow(a21, 6) +
          30240 * pow(a21, 7) -
          7 * sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          10 * a20 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          10 * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2))) /
         (6. * (a20 + a21) *
          (36 * pow(a20, 3) - 2 * pow(a20, 2) * (5 + 6 * a21) +
           a21 * (21 - 46 * a21 - 84 * pow(a21, 2)) -
           a20 * (63 + 56 * a21 + 132 * pow(a21, 2))) *
          (216 * pow(a20, 5) + 6 * pow(a20, 4) * (89 + 60 * a21) -
           pow(a20, 3) * (571 + 816 * a21 + 720 * pow(a21, 2)) +
           pow(a21, 2) *
               (-91 + 515 * a21 + 102 * pow(a21, 2) - 504 * pow(a21, 3)) -
           a20 * a21 *
               (-784 + 297 * a21 + 1680 * pow(a21, 2) + 1800 * pow(a21, 3)) -
           pow(a20, 2) *
               (889 + 1383 * a21 + 3132 * pow(a21, 2) + 2160 * pow(a21, 3))));
}

template <typename T> static inline auto rk422_sol_1_b3(T a20, T a21) -> T {
  using std::pow;
  using std::sqrt;
  return (-2 *
          (1296 * pow(a20, 6) + 3682 * pow(a21, 3) - 11868 * pow(a21, 4) +
           8424 * pow(a21, 5) - 3024 * pow(a21, 6) +
           288 * pow(a20, 5) * (19 + 12 * a21) -
           6 * pow(a20, 4) * (-913 + 588 * a21 + 360 * pow(a21, 2)) -
           6 * pow(a20, 2) * a21 *
               (-6769 + 111 * a21 + 4848 * pow(a21, 2) + 3960 * pow(a21, 3)) -
           3 * a20 * pow(a21, 2) *
               (6699 - 14462 * a21 - 1776 * pow(a21, 2) + 4608 * pow(a21, 3)) -
           pow(a20, 3) * (25571 + 50442 * a21 + 34992 * pow(a21, 2) +
                          17280 * pow(a21, 3)) +
           sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                 pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                 2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                 pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                        pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                        2 * a20 * a21 * (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                        pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                    2)))) /
         (21. *
          (72 * pow(a20, 6) + 16 * pow(a20, 5) * (19 + 12 * a21) -
           8 * pow(a20, 4) * (27 + 8 * a21 + 15 * pow(a21, 2)) +
           pow(a21, 3) *
               (-63 + 180 * a21 + 160 * pow(a21, 2) - 168 * pow(a21, 3)) -
           a20 * pow(a21, 2) *
               (-315 + 108 * a21 + 496 * pow(a21, 2) + 768 * pow(a21, 3)) -
           pow(a20, 3) *
               (567 + 900 * a21 + 1856 * pow(a21, 2) + 960 * pow(a21, 3)) -
           pow(a20, 2) * a21 *
               (189 + 972 * a21 + 2144 * pow(a21, 2) + 1320 * pow(a21, 3))));
}

template <typename T> static inline auto rk422_sol_1_a30(T a20, T a21) -> T {
  using std::pow;
  using std::sqrt;
  return -0.000012345679012345678 *
         (681113573 * pow(a20, 6) + 294181293 * pow(a20, 7) -
          572377500 * pow(a20, 8) - 112702860 * pow(a20, 9) +
          42029280 * pow(a20, 10) + 25404192 * pow(a20, 11) +
          7558272 * pow(a20, 12) - 2041061337 * pow(a20, 5) * a21 +
          1402210446 * pow(a20, 6) * a21 + 2364692940 * pow(a20, 7) * a21 -
          861182280 * pow(a20, 8) * a21 - 462970080 * pow(a20, 9) * a21 -
          5388768 * pow(a20, 10) * a21 + 31912704 * pow(a20, 11) * a21 +
          2459214450 * pow(a20, 4) * pow(a21, 2) -
          2522630187 * pow(a20, 5) * pow(a21, 2) +
          2350382580 * pow(a20, 6) * pow(a21, 2) +
          2349307800 * pow(a20, 7) * pow(a21, 2) -
          990273600 * pow(a20, 8) * pow(a21, 2) -
          427952160 * pow(a20, 9) * pow(a21, 2) -
          7838208 * pow(a20, 10) * pow(a21, 2) -
          1537134410 * pow(a20, 3) * pow(a21, 3) -
          82433190 * pow(a20, 4) * pow(a21, 3) -
          3406971060 * pow(a20, 5) * pow(a21, 3) +
          6200363160 * pow(a20, 6) * pow(a21, 3) +
          2096357760 * pow(a20, 7) * pow(a21, 3) -
          781293600 * pow(a20, 8) * pow(a21, 3) -
          264072960 * pow(a20, 9) * pow(a21, 3) +
          529457985 * pow(a20, 2) * pow(a21, 4) +
          1921260495 * pow(a20, 3) * pow(a21, 4) -
          1392685380 * pow(a20, 4) * pow(a21, 4) -
          354430080 * pow(a20, 5) * pow(a21, 4) +
          6515380800 * pow(a20, 6) * pow(a21, 4) +
          716869440 * pow(a20, 7) * pow(a21, 4) -
          499685760 * pow(a20, 8) * pow(a21, 4) - 93945789 * a20 * pow(a21, 5) -
          1241010414 * pow(a20, 2) * pow(a21, 5) +
          1457473860 * pow(a20, 3) * pow(a21, 5) -
          4703828760 * pow(a20, 4) * pow(a21, 5) +
          4137842880 * pow(a20, 5) * pow(a21, 5) +
          3814703424 * pow(a20, 6) * pow(a21, 5) +
          23514624 * pow(a20, 7) * pow(a21, 5) + 6120296 * pow(a21, 6) +
          345911727 * a20 * pow(a21, 6) - 72699300 * pow(a20, 2) * pow(a21, 6) -
          83139480 * pow(a20, 3) * pow(a21, 6) -
          1510202880 * pow(a20, 4) * pow(a21, 6) +
          4908786624 * pow(a20, 5) * pow(a21, 6) +
          1379524608 * pow(a20, 6) * pow(a21, 6) - 40043514 * pow(a21, 7) -
          83281500 * a20 * pow(a21, 7) + 815070600 * pow(a20, 2) * pow(a21, 7) -
          2006467200 * pow(a20, 3) * pow(a21, 7) +
          2697416640 * pow(a20, 4) * pow(a21, 7) +
          2341384704 * pow(a20, 5) * pow(a21, 7) + 19293840 * pow(a21, 8) -
          281713140 * a20 * pow(a21, 8) -
          117534240 * pow(a20, 2) * pow(a21, 8) +
          262634400 * pow(a20, 3) * pow(a21, 8) +
          1977747840 * pow(a20, 4) * pow(a21, 8) + 66899520 * pow(a21, 9) +
          136922400 * a20 * pow(a21, 9) -
          365355360 * pow(a20, 2) * pow(a21, 9) +
          920989440 * pow(a20, 3) * pow(a21, 9) - 37713600 * pow(a21, 10) -
          134859168 * a20 * pow(a21, 10) +
          204913152 * pow(a20, 2) * pow(a21, 10) - 9199008 * pow(a21, 11) +
          3919104 * a20 * pow(a21, 11) - 4572288 * pow(a21, 12) +
          14413 * pow(a20, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          23517 * pow(a20, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          5022 * pow(a20, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          5832 * pow(a20, 6) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          6405 * pow(a20, 2) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          20088 * pow(a20, 3) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          13194 * pow(a20, 4) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          9072 * pow(a20, 5) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          9261 * a20 * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          8910 * pow(a20, 2) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          34596 * pow(a20, 3) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          20520 * pow(a20, 4) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          5976 * a20 * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          42444 * pow(a20, 2) * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          56160 * pow(a20, 3) * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          8766 * a20 * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          42120 * pow(a20, 2) * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          8208 * a20 * pow(a21, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          3997 * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          495 * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          7254 * pow(a21, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          1512 * pow(a21, 6) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2))) /
         (pow(a20 - a21, 4) *
          (2160 * pow(a20, 6) + 12 * pow(a20, 5) * (319 + 480 * a21) -
           4 * pow(a20, 4) * (2362 + 1335 * a21 + 900 * pow(a21, 2)) -
           pow(a20, 3) * (4893 + 13828 * a21 + 34440 * pow(a21, 2) +
                          28800 * pow(a21, 3)) +
           pow(a20, 2) * (6223 + 8631 * a21 + 5124 * pow(a21, 2) -
                          33000 * pow(a21, 3) - 39600 * pow(a21, 4)) +
           a20 * a21 *
               (-5488 + 9009 * a21 + 13940 * pow(a21, 2) - 3180 * pow(a21, 3) -
                23040 * pow(a21, 4)) +
           pow(a21, 2) * (637 - 4515 * a21 + 4436 * pow(a21, 2) +
                          4548 * pow(a21, 3) - 5040 * pow(a21, 4))));
}

template <typename T> static inline auto rk422_sol_1_a31(T a20, T a21) -> T {
  using std::pow;
  using std::sqrt;
  return (247526048 * pow(a20, 5) + 708352001 * pow(a20, 6) +
          169262013 * pow(a20, 7) - 663392340 * pow(a20, 8) -
          239386860 * pow(a20, 9) + 115800192 * pow(a20, 10) +
          63755424 * pow(a20, 11) + 7558272 * pow(a20, 12) -
          680031065 * pow(a20, 4) * a21 - 1121151339 * pow(a20, 5) * a21 +
          1799103246 * pow(a20, 6) * a21 + 1891396980 * pow(a20, 7) * a21 -
          1003385880 * pow(a20, 8) * a21 - 548272800 * pow(a20, 9) * a21 +
          67487904 * pow(a20, 10) * a21 + 31912704 * pow(a20, 11) * a21 +
          719558630 * pow(a20, 3) * pow(a21, 2) +
          937805400 * pow(a20, 4) * pow(a21, 2) -
          758500587 * pow(a20, 5) * pow(a21, 2) +
          3531918780 * pow(a20, 6) * pow(a21, 2) +
          2009379960 * pow(a20, 7) * pow(a21, 2) -
          1776621600 * pow(a20, 8) * pow(a21, 2) -
          651434400 * pow(a20, 9) * pow(a21, 2) -
          7838208 * pow(a20, 10) * pow(a21, 2) -
          364647220 * pow(a20, 2) * pow(a21, 3) -
          1041093830 * pow(a20, 3) * pow(a21, 3) -
          1313658390 * pow(a20, 4) * pow(a21, 3) -
          697286700 * pow(a20, 5) * pow(a21, 3) +
          6886971000 * pow(a20, 6) * pow(a21, 3) +
          1638817920 * pow(a20, 7) * pow(a21, 3) -
          1423746720 * pow(a20, 8) * pow(a21, 3) -
          264072960 * pow(a20, 9) * pow(a21, 3) + 86054290 * a20 * pow(a21, 4) +
          805251825 * pow(a20, 2) * pow(a21, 4) +
          633012735 * pow(a20, 3) * pow(a21, 4) -
          1510784460 * pow(a20, 4) * pow(a21, 4) +
          2913472800 * pow(a20, 5) * pow(a21, 4) +
          8069569920 * pow(a20, 6) * pow(a21, 4) +
          645019200 * pow(a20, 7) * pow(a21, 4) -
          499685760 * pow(a20, 8) * pow(a21, 4) - 6578299 * pow(a21, 5) -
          290309103 * a20 * pow(a21, 5) -
          249996654 * pow(a20, 2) * pow(a21, 5) -
          150869700 * pow(a20, 3) * pow(a21, 5) -
          2610918360 * pow(a20, 4) * pow(a21, 5) +
          6507998784 * pow(a20, 5) * pow(a21, 5) +
          4942099008 * pow(a20, 6) * pow(a21, 5) +
          23514624 * pow(a20, 7) * pow(a21, 5) + 43633142 * pow(a21, 6) +
          160906287 * a20 * pow(a21, 6) -
          246582540 * pow(a20, 2) * pow(a21, 6) -
          981721080 * pow(a20, 3) * pow(a21, 6) -
          181828800 * pow(a20, 4) * pow(a21, 6) +
          6010054848 * pow(a20, 5) * pow(a21, 6) +
          1379524608 * pow(a20, 6) * pow(a21, 6) - 30767754 * pow(a21, 7) +
          47334780 * a20 * pow(a21, 7) + 224366760 * pow(a20, 2) * pow(a21, 7) -
          1314403200 * pow(a20, 3) * pow(a21, 7) +
          2942827200 * pow(a20, 4) * pow(a21, 7) +
          2341384704 * pow(a20, 5) * pow(a21, 7) - 20584080 * pow(a21, 8) -
          233579700 * a20 * pow(a21, 8) +
          395953920 * pow(a20, 2) * pow(a21, 8) +
          506645280 * pow(a20, 3) * pow(a21, 8) +
          1977747840 * pow(a20, 4) * pow(a21, 8) - 28868400 * pow(a21, 9) +
          292986720 * a20 * pow(a21, 9) +
          260301600 * pow(a20, 2) * pow(a21, 9) +
          920989440 * pow(a20, 3) * pow(a21, 9) - 45746208 * pow(a21, 10) +
          305666784 * a20 * pow(a21, 10) +
          204913152 * pow(a20, 2) * pow(a21, 10) + 90738144 * pow(a21, 11) +
          3919104 * a20 * pow(a21, 11) - 4572288 * pow(a21, 12) +
          6013 * pow(a20, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          40165 * pow(a20, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          12789 * pow(a20, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          24570 * pow(a20, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          5832 * pow(a20, 6) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          3598 * a20 * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          50889 * pow(a20, 2) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          43200 * pow(a20, 3) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          35874 * pow(a20, 4) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          9072 * pow(a20, 5) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          47643 * a20 * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          15354 * pow(a20, 2) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          97236 * pow(a20, 3) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          20520 * pow(a20, 4) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          4896 * a20 * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          14364 * pow(a20, 2) * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          56160 * pow(a20, 3) * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          3366 * a20 * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          42120 * pow(a20, 2) * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          8208 * a20 * pow(a21, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          1043 * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          20063 * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          10161 * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          25794 * pow(a21, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          1512 * pow(a21, 6) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2))) /
         (81000. * pow(a20 - a21, 4) *
          (2160 * pow(a20, 6) + 12 * pow(a20, 5) * (319 + 480 * a21) -
           4 * pow(a20, 4) * (2362 + 1335 * a21 + 900 * pow(a21, 2)) -
           pow(a20, 3) * (4893 + 13828 * a21 + 34440 * pow(a21, 2) +
                          28800 * pow(a21, 3)) +
           pow(a20, 2) * (6223 + 8631 * a21 + 5124 * pow(a21, 2) -
                          33000 * pow(a21, 3) - 39600 * pow(a21, 4)) +
           a20 * a21 *
               (-5488 + 9009 * a21 + 13940 * pow(a21, 2) - 3180 * pow(a21, 3) -
                23040 * pow(a21, 4)) +
           pow(a21, 2) * (637 - 4515 * a21 + 4436 * pow(a21, 2) +
                          4548 * pow(a21, 3) - 5040 * pow(a21, 4))));
}

template <typename T> static inline auto rk422_sol_1_a32(T a20, T a21) -> T {
  using std::pow;
  using std::sqrt;
  return -0.000012345679012345678 *
         (247526048 * pow(a20, 5) + 44040528 * pow(a20, 6) -
          238942980 * pow(a20, 7) - 37257840 * pow(a20, 8) +
          36709200 * pow(a20, 9) + 17589312 * pow(a20, 10) +
          3359232 * pow(a20, 11) - 680031065 * pow(a20, 4) * a21 +
          720269298 * pow(a20, 5) * a21 + 755236800 * pow(a20, 6) * a21 -
          449114760 * pow(a20, 7) * a21 - 199357200 * pow(a20, 8) * a21 +
          14618880 * pow(a20, 9) * a21 + 14556672 * pow(a20, 10) * a21 +
          719558630 * pow(a20, 3) * pow(a21, 2) -
          903038850 * pow(a20, 4) * pow(a21, 2) +
          1277813700 * pow(a20, 5) * pow(a21, 2) +
          752646600 * pow(a20, 6) * pow(a21, 2) -
          608394240 * pow(a20, 7) * pow(a21, 2) -
          214228800 * pow(a20, 8) * pow(a21, 2) -
          1866240 * pow(a20, 9) * pow(a21, 2) -
          364647220 * pow(a20, 2) * pow(a21, 3) -
          343006020 * pow(a20, 3) * pow(a21, 3) -
          920622600 * pow(a20, 4) * pow(a21, 3) +
          2882084760 * pow(a20, 5) * pow(a21, 3) +
          687968640 * pow(a20, 6) * pow(a21, 3) -
          474647040 * pow(a20, 7) * pow(a21, 3) -
          117573120 * pow(a20, 8) * pow(a21, 3) + 86054290 * a20 * pow(a21, 4) +
          827087940 * pow(a20, 2) * pow(a21, 4) -
          1088040060 * pow(a20, 3) * pow(a21, 4) +
          601083720 * pow(a20, 4) * pow(a21, 4) +
          3092942880 * pow(a20, 5) * pow(a21, 4) +
          210107520 * pow(a20, 6) * pow(a21, 4) -
          235146240 * pow(a20, 7) * pow(a21, 4) - 6578299 * pow(a21, 5) -
          357901614 * a20 * pow(a21, 5) +
          409271760 * pow(a20, 2) * pow(a21, 5) -
          2025687960 * pow(a20, 3) * pow(a21, 5) +
          2431749600 * pow(a20, 4) * pow(a21, 5) +
          1821947904 * pow(a20, 5) * pow(a21, 5) -
          15676416 * pow(a20, 6) * pow(a21, 5) + 51272046 * pow(a21, 6) +
          215126460 * a20 * pow(a21, 6) -
          540608040 * pow(a20, 2) * pow(a21, 6) -
          396835200 * pow(a20, 3) * pow(a21, 6) +
          2489719680 * pow(a20, 4) * pow(a21, 6) +
          611380224 * pow(a20, 5) * pow(a21, 6) - 77928840 * pow(a21, 7) +
          351379080 * a20 * pow(a21, 7) -
          1043850240 * pow(a20, 2) * pow(a21, 7) +
          1440115200 * pow(a20, 3) * pow(a21, 7) +
          1108546560 * pow(a20, 4) * pow(a21, 7) - 17203320 * pow(a21, 8) -
          173579760 * a20 * pow(a21, 8) +
          215472960 * pow(a20, 2) * pow(a21, 8) +
          1002170880 * pow(a20, 3) * pow(a21, 8) + 74332080 * pow(a21, 9) -
          126593280 * a20 * pow(a21, 9) +
          520680960 * pow(a20, 2) * pow(a21, 9) - 43219008 * pow(a21, 10) +
          148925952 * a20 * pow(a21, 10) + 18289152 * pow(a21, 11) +
          6013 * pow(a20, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          6852 * pow(a20, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          2628 * pow(a20, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          2592 * pow(a20, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          3598 * a20 * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          12216 * pow(a20, 2) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          6912 * pow(a20, 3) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          4320 * pow(a20, 4) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          204 * a20 * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          24264 * pow(a20, 2) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          8640 * pow(a20, 3) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          17280 * a20 * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          25920 * pow(a20, 2) * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          21600 * a20 * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          1043 * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          5160 * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          2556 * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          6048 * pow(a21, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2))) /
         (pow(a20 - a21, 4) *
          (2160 * pow(a20, 6) + 12 * pow(a20, 5) * (319 + 480 * a21) -
           4 * pow(a20, 4) * (2362 + 1335 * a21 + 900 * pow(a21, 2)) -
           pow(a20, 3) * (4893 + 13828 * a21 + 34440 * pow(a21, 2) +
                          28800 * pow(a21, 3)) +
           pow(a20, 2) * (6223 + 8631 * a21 + 5124 * pow(a21, 2) -
                          33000 * pow(a21, 3) - 39600 * pow(a21, 4)) +
           a20 * a21 *
               (-5488 + 9009 * a21 + 13940 * pow(a21, 2) - 3180 * pow(a21, 3) -
                23040 * pow(a21, 4)) +
           pow(a21, 2) * (637 - 4515 * a21 + 4436 * pow(a21, 2) +
                          4548 * pow(a21, 3) - 5040 * pow(a21, 4))));
}

template <typename T> static inline auto rk422_sol_2_b0(T a20, T a21) -> T {
  using std::pow;
  using std::sqrt;
  return -0.16666666666666666 *
         (-648 * pow(a20, 6) - 1820 * pow(a21, 3) + 12393 * pow(a21, 4) -
          11898 * pow(a21, 5) + 1512 * pow(a21, 6) -
          18 * pow(a20, 5) * (425 + 96 * a21) +
          9 * pow(a20, 4) * (-799 + 198 * a21 + 120 * pow(a21, 2)) +
          18 * pow(a20, 2) * a21 *
              (-2338 + 187 * a21 + 1714 * pow(a21, 2) + 660 * pow(a21, 3)) +
          3 * a20 * pow(a21, 2) *
              (6167 - 13464 * a21 - 3654 * pow(a21, 2) + 2304 * pow(a21, 3)) +
          pow(a20, 3) *
              (27559 + 48960 * a21 + 39348 * pow(a21, 2) + 8640 * pow(a21, 3)) +
          sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
               pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                       pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                       2 * a20 * a21 * (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                       pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                   2))) /
         ((a20 + a21) *
          (216 * pow(a20, 5) + 6 * pow(a20, 4) * (89 + 60 * a21) -
           pow(a20, 3) * (571 + 816 * a21 + 720 * pow(a21, 2)) +
           pow(a21, 2) *
               (-91 + 515 * a21 + 102 * pow(a21, 2) - 504 * pow(a21, 3)) -
           a20 * a21 *
               (-784 + 297 * a21 + 1680 * pow(a21, 2) + 1800 * pow(a21, 3)) -
           pow(a20, 2) *
               (889 + 1383 * a21 + 3132 * pow(a21, 2) + 2160 * pow(a21, 3))));
}

template <typename T> static inline auto rk422_sol_2_b1(T a20, T a21) -> T {
  using std::pow;
  using std::sqrt;
  return -0.023809523809523808 *
         (-273812 * pow(a20, 3) + 493549 * pow(a20, 4) + 90372 * pow(a20, 5) -
          155268 * pow(a20, 6) - 40176 * pow(a20, 7) +
          285033 * pow(a20, 2) * a21 - 558950 * pow(a20, 3) * a21 +
          881484 * pow(a20, 4) * a21 - 52200 * pow(a20, 5) * a21 -
          147312 * pow(a20, 6) * a21 - 66444 * a20 * pow(a21, 2) -
          573888 * pow(a20, 2) * pow(a21, 2) +
          599448 * pow(a20, 3) * pow(a21, 2) +
          1119780 * pow(a20, 4) * pow(a21, 2) -
          40176 * pow(a20, 5) * pow(a21, 2) + 4459 * pow(a21, 3) +
          428806 * a20 * pow(a21, 3) - 908520 * pow(a20, 2) * pow(a21, 3) +
          1895760 * pow(a20, 3) * pow(a21, 3) +
          602640 * pow(a20, 4) * pow(a21, 3) - 49805 * pow(a21, 4) -
          541308 * a20 * pow(a21, 4) + 775620 * pow(a20, 2) * pow(a21, 4) +
          1272240 * pow(a20, 3) * pow(a21, 4) + 175548 * pow(a21, 5) -
          327528 * a20 * pow(a21, 5) + 1165104 * pow(a20, 2) * pow(a21, 5) -
          224100 * pow(a21, 6) + 522288 * a20 * pow(a21, 6) +
          93744 * pow(a21, 7) -
          7 * sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          10 * a20 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          10 * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2))) /
         ((a20 + a21) *
          (2 * pow(a20, 2) + a21 * (-3 + 2 * a21) + a20 * (9 + 4 * a21)) *
          (216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
           2 * a20 * a21 * (-392 + 495 * a21 + 648 * pow(a21, 2)) -
           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2))));
}

template <typename T> static inline auto rk422_sol_2_b2(T a20, T a21) -> T {
  using std::pow;
  using std::sqrt;
  return (273812 * pow(a20, 3) - 193956 * pow(a20, 4) + 21156 * pow(a20, 5) +
          4248 * pow(a20, 6) - 12960 * pow(a20, 7) -
          285033 * pow(a20, 2) * a21 + 755244 * pow(a20, 3) * a21 -
          152304 * pow(a20, 4) * a21 - 28512 * pow(a20, 5) * a21 -
          47520 * pow(a20, 6) * a21 + 66444 * a20 * pow(a21, 2) +
          359352 * pow(a20, 2) * pow(a21, 2) +
          438504 * pow(a20, 3) * pow(a21, 2) +
          9720 * pow(a20, 4) * pow(a21, 2) - 12960 * pow(a20, 5) * pow(a21, 2) -
          4459 * pow(a21, 3) - 523572 * a20 * pow(a21, 3) +
          1155696 * pow(a20, 2) * pow(a21, 3) +
          408960 * pow(a20, 3) * pow(a21, 3) +
          194400 * pow(a20, 4) * pow(a21, 3) + 66276 * pow(a21, 4) +
          280884 * a20 * pow(a21, 4) + 819720 * pow(a20, 2) * pow(a21, 4) +
          410400 * pow(a20, 3) * pow(a21, 4) - 262848 * pow(a21, 5) +
          619488 * a20 * pow(a21, 5) + 375840 * pow(a20, 2) * pow(a21, 5) +
          166248 * pow(a21, 6) + 168480 * a20 * pow(a21, 6) +
          30240 * pow(a21, 7) +
          7 * sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          10 * a20 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          10 * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2))) /
         (6. * (a20 + a21) *
          (36 * pow(a20, 3) - 2 * pow(a20, 2) * (5 + 6 * a21) +
           a21 * (21 - 46 * a21 - 84 * pow(a21, 2)) -
           a20 * (63 + 56 * a21 + 132 * pow(a21, 2))) *
          (216 * pow(a20, 5) + 6 * pow(a20, 4) * (89 + 60 * a21) -
           pow(a20, 3) * (571 + 816 * a21 + 720 * pow(a21, 2)) +
           pow(a21, 2) *
               (-91 + 515 * a21 + 102 * pow(a21, 2) - 504 * pow(a21, 3)) -
           a20 * a21 *
               (-784 + 297 * a21 + 1680 * pow(a21, 2) + 1800 * pow(a21, 3)) -
           pow(a20, 2) *
               (889 + 1383 * a21 + 3132 * pow(a21, 2) + 2160 * pow(a21, 3))));
}

template <typename T> static inline auto rk422_sol_2_b3(T a20, T a21) -> T {
  using std::pow;
  using std::sqrt;
  return (2 *
          (-1296 * pow(a20, 6) - 3682 * pow(a21, 3) + 11868 * pow(a21, 4) -
           8424 * pow(a21, 5) + 3024 * pow(a21, 6) -
           288 * pow(a20, 5) * (19 + 12 * a21) +
           6 * pow(a20, 4) * (-913 + 588 * a21 + 360 * pow(a21, 2)) +
           6 * pow(a20, 2) * a21 *
               (-6769 + 111 * a21 + 4848 * pow(a21, 2) + 3960 * pow(a21, 3)) +
           3 * a20 * pow(a21, 2) *
               (6699 - 14462 * a21 - 1776 * pow(a21, 2) + 4608 * pow(a21, 3)) +
           pow(a20, 3) * (25571 + 50442 * a21 + 34992 * pow(a21, 2) +
                          17280 * pow(a21, 3)) +
           sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                 pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                 2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                 pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                        pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                        2 * a20 * a21 * (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                        pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                    2)))) /
         (21. *
          (72 * pow(a20, 6) + 16 * pow(a20, 5) * (19 + 12 * a21) -
           8 * pow(a20, 4) * (27 + 8 * a21 + 15 * pow(a21, 2)) +
           pow(a21, 3) *
               (-63 + 180 * a21 + 160 * pow(a21, 2) - 168 * pow(a21, 3)) -
           a20 * pow(a21, 2) *
               (-315 + 108 * a21 + 496 * pow(a21, 2) + 768 * pow(a21, 3)) -
           pow(a20, 3) *
               (567 + 900 * a21 + 1856 * pow(a21, 2) + 960 * pow(a21, 3)) -
           pow(a20, 2) * a21 *
               (189 + 972 * a21 + 2144 * pow(a21, 2) + 1320 * pow(a21, 3))));
}

template <typename T> static inline auto rk422_sol_2_a30(T a20, T a21) -> T {
  using std::pow;
  using std::sqrt;
  return (-681113573 * pow(a20, 6) - 294181293 * pow(a20, 7) +
          572377500 * pow(a20, 8) + 112702860 * pow(a20, 9) -
          42029280 * pow(a20, 10) - 25404192 * pow(a20, 11) -
          7558272 * pow(a20, 12) + 2041061337 * pow(a20, 5) * a21 -
          1402210446 * pow(a20, 6) * a21 - 2364692940 * pow(a20, 7) * a21 +
          861182280 * pow(a20, 8) * a21 + 462970080 * pow(a20, 9) * a21 +
          5388768 * pow(a20, 10) * a21 - 31912704 * pow(a20, 11) * a21 -
          2459214450 * pow(a20, 4) * pow(a21, 2) +
          2522630187 * pow(a20, 5) * pow(a21, 2) -
          2350382580 * pow(a20, 6) * pow(a21, 2) -
          2349307800 * pow(a20, 7) * pow(a21, 2) +
          990273600 * pow(a20, 8) * pow(a21, 2) +
          427952160 * pow(a20, 9) * pow(a21, 2) +
          7838208 * pow(a20, 10) * pow(a21, 2) +
          1537134410 * pow(a20, 3) * pow(a21, 3) +
          82433190 * pow(a20, 4) * pow(a21, 3) +
          3406971060 * pow(a20, 5) * pow(a21, 3) -
          6200363160 * pow(a20, 6) * pow(a21, 3) -
          2096357760 * pow(a20, 7) * pow(a21, 3) +
          781293600 * pow(a20, 8) * pow(a21, 3) +
          264072960 * pow(a20, 9) * pow(a21, 3) -
          529457985 * pow(a20, 2) * pow(a21, 4) -
          1921260495 * pow(a20, 3) * pow(a21, 4) +
          1392685380 * pow(a20, 4) * pow(a21, 4) +
          354430080 * pow(a20, 5) * pow(a21, 4) -
          6515380800 * pow(a20, 6) * pow(a21, 4) -
          716869440 * pow(a20, 7) * pow(a21, 4) +
          499685760 * pow(a20, 8) * pow(a21, 4) + 93945789 * a20 * pow(a21, 5) +
          1241010414 * pow(a20, 2) * pow(a21, 5) -
          1457473860 * pow(a20, 3) * pow(a21, 5) +
          4703828760 * pow(a20, 4) * pow(a21, 5) -
          4137842880 * pow(a20, 5) * pow(a21, 5) -
          3814703424 * pow(a20, 6) * pow(a21, 5) -
          23514624 * pow(a20, 7) * pow(a21, 5) - 6120296 * pow(a21, 6) -
          345911727 * a20 * pow(a21, 6) + 72699300 * pow(a20, 2) * pow(a21, 6) +
          83139480 * pow(a20, 3) * pow(a21, 6) +
          1510202880 * pow(a20, 4) * pow(a21, 6) -
          4908786624 * pow(a20, 5) * pow(a21, 6) -
          1379524608 * pow(a20, 6) * pow(a21, 6) + 40043514 * pow(a21, 7) +
          83281500 * a20 * pow(a21, 7) - 815070600 * pow(a20, 2) * pow(a21, 7) +
          2006467200 * pow(a20, 3) * pow(a21, 7) -
          2697416640 * pow(a20, 4) * pow(a21, 7) -
          2341384704 * pow(a20, 5) * pow(a21, 7) - 19293840 * pow(a21, 8) +
          281713140 * a20 * pow(a21, 8) +
          117534240 * pow(a20, 2) * pow(a21, 8) -
          262634400 * pow(a20, 3) * pow(a21, 8) -
          1977747840 * pow(a20, 4) * pow(a21, 8) - 66899520 * pow(a21, 9) -
          136922400 * a20 * pow(a21, 9) +
          365355360 * pow(a20, 2) * pow(a21, 9) -
          920989440 * pow(a20, 3) * pow(a21, 9) + 37713600 * pow(a21, 10) +
          134859168 * a20 * pow(a21, 10) -
          204913152 * pow(a20, 2) * pow(a21, 10) + 9199008 * pow(a21, 11) -
          3919104 * a20 * pow(a21, 11) + 4572288 * pow(a21, 12) +
          14413 * pow(a20, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          23517 * pow(a20, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          5022 * pow(a20, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          5832 * pow(a20, 6) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          6405 * pow(a20, 2) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          20088 * pow(a20, 3) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          13194 * pow(a20, 4) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          9072 * pow(a20, 5) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          9261 * a20 * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          8910 * pow(a20, 2) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          34596 * pow(a20, 3) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          20520 * pow(a20, 4) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          5976 * a20 * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          42444 * pow(a20, 2) * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          56160 * pow(a20, 3) * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          8766 * a20 * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          42120 * pow(a20, 2) * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          8208 * a20 * pow(a21, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          3997 * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          495 * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          7254 * pow(a21, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          1512 * pow(a21, 6) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2))) /
         (81000. * pow(a20 - a21, 4) *
          (2160 * pow(a20, 6) + 12 * pow(a20, 5) * (319 + 480 * a21) -
           4 * pow(a20, 4) * (2362 + 1335 * a21 + 900 * pow(a21, 2)) -
           pow(a20, 3) * (4893 + 13828 * a21 + 34440 * pow(a21, 2) +
                          28800 * pow(a21, 3)) +
           pow(a20, 2) * (6223 + 8631 * a21 + 5124 * pow(a21, 2) -
                          33000 * pow(a21, 3) - 39600 * pow(a21, 4)) +
           a20 * a21 *
               (-5488 + 9009 * a21 + 13940 * pow(a21, 2) - 3180 * pow(a21, 3) -
                23040 * pow(a21, 4)) +
           pow(a21, 2) * (637 - 4515 * a21 + 4436 * pow(a21, 2) +
                          4548 * pow(a21, 3) - 5040 * pow(a21, 4))));
}

template <typename T> static inline auto rk422_sol_2_a31(T a20, T a21) -> T {
  using std::pow;
  using std::sqrt;
  return (247526048 * pow(a20, 5) + 708352001 * pow(a20, 6) +
          169262013 * pow(a20, 7) - 663392340 * pow(a20, 8) -
          239386860 * pow(a20, 9) + 115800192 * pow(a20, 10) +
          63755424 * pow(a20, 11) + 7558272 * pow(a20, 12) -
          680031065 * pow(a20, 4) * a21 - 1121151339 * pow(a20, 5) * a21 +
          1799103246 * pow(a20, 6) * a21 + 1891396980 * pow(a20, 7) * a21 -
          1003385880 * pow(a20, 8) * a21 - 548272800 * pow(a20, 9) * a21 +
          67487904 * pow(a20, 10) * a21 + 31912704 * pow(a20, 11) * a21 +
          719558630 * pow(a20, 3) * pow(a21, 2) +
          937805400 * pow(a20, 4) * pow(a21, 2) -
          758500587 * pow(a20, 5) * pow(a21, 2) +
          3531918780 * pow(a20, 6) * pow(a21, 2) +
          2009379960 * pow(a20, 7) * pow(a21, 2) -
          1776621600 * pow(a20, 8) * pow(a21, 2) -
          651434400 * pow(a20, 9) * pow(a21, 2) -
          7838208 * pow(a20, 10) * pow(a21, 2) -
          364647220 * pow(a20, 2) * pow(a21, 3) -
          1041093830 * pow(a20, 3) * pow(a21, 3) -
          1313658390 * pow(a20, 4) * pow(a21, 3) -
          697286700 * pow(a20, 5) * pow(a21, 3) +
          6886971000 * pow(a20, 6) * pow(a21, 3) +
          1638817920 * pow(a20, 7) * pow(a21, 3) -
          1423746720 * pow(a20, 8) * pow(a21, 3) -
          264072960 * pow(a20, 9) * pow(a21, 3) + 86054290 * a20 * pow(a21, 4) +
          805251825 * pow(a20, 2) * pow(a21, 4) +
          633012735 * pow(a20, 3) * pow(a21, 4) -
          1510784460 * pow(a20, 4) * pow(a21, 4) +
          2913472800 * pow(a20, 5) * pow(a21, 4) +
          8069569920 * pow(a20, 6) * pow(a21, 4) +
          645019200 * pow(a20, 7) * pow(a21, 4) -
          499685760 * pow(a20, 8) * pow(a21, 4) - 6578299 * pow(a21, 5) -
          290309103 * a20 * pow(a21, 5) -
          249996654 * pow(a20, 2) * pow(a21, 5) -
          150869700 * pow(a20, 3) * pow(a21, 5) -
          2610918360 * pow(a20, 4) * pow(a21, 5) +
          6507998784 * pow(a20, 5) * pow(a21, 5) +
          4942099008 * pow(a20, 6) * pow(a21, 5) +
          23514624 * pow(a20, 7) * pow(a21, 5) + 43633142 * pow(a21, 6) +
          160906287 * a20 * pow(a21, 6) -
          246582540 * pow(a20, 2) * pow(a21, 6) -
          981721080 * pow(a20, 3) * pow(a21, 6) -
          181828800 * pow(a20, 4) * pow(a21, 6) +
          6010054848 * pow(a20, 5) * pow(a21, 6) +
          1379524608 * pow(a20, 6) * pow(a21, 6) - 30767754 * pow(a21, 7) +
          47334780 * a20 * pow(a21, 7) + 224366760 * pow(a20, 2) * pow(a21, 7) -
          1314403200 * pow(a20, 3) * pow(a21, 7) +
          2942827200 * pow(a20, 4) * pow(a21, 7) +
          2341384704 * pow(a20, 5) * pow(a21, 7) - 20584080 * pow(a21, 8) -
          233579700 * a20 * pow(a21, 8) +
          395953920 * pow(a20, 2) * pow(a21, 8) +
          506645280 * pow(a20, 3) * pow(a21, 8) +
          1977747840 * pow(a20, 4) * pow(a21, 8) - 28868400 * pow(a21, 9) +
          292986720 * a20 * pow(a21, 9) +
          260301600 * pow(a20, 2) * pow(a21, 9) +
          920989440 * pow(a20, 3) * pow(a21, 9) - 45746208 * pow(a21, 10) +
          305666784 * a20 * pow(a21, 10) +
          204913152 * pow(a20, 2) * pow(a21, 10) + 90738144 * pow(a21, 11) +
          3919104 * a20 * pow(a21, 11) - 4572288 * pow(a21, 12) -
          6013 * pow(a20, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          40165 * pow(a20, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          12789 * pow(a20, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          24570 * pow(a20, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          5832 * pow(a20, 6) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          3598 * a20 * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          50889 * pow(a20, 2) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          43200 * pow(a20, 3) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          35874 * pow(a20, 4) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          9072 * pow(a20, 5) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          47643 * a20 * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          15354 * pow(a20, 2) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          97236 * pow(a20, 3) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          20520 * pow(a20, 4) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          4896 * a20 * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          14364 * pow(a20, 2) * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          56160 * pow(a20, 3) * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          3366 * a20 * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          42120 * pow(a20, 2) * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          8208 * a20 * pow(a21, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          1043 * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          20063 * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          10161 * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          25794 * pow(a21, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          1512 * pow(a21, 6) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2))) /
         (81000. * pow(a20 - a21, 4) *
          (2160 * pow(a20, 6) + 12 * pow(a20, 5) * (319 + 480 * a21) -
           4 * pow(a20, 4) * (2362 + 1335 * a21 + 900 * pow(a21, 2)) -
           pow(a20, 3) * (4893 + 13828 * a21 + 34440 * pow(a21, 2) +
                          28800 * pow(a21, 3)) +
           pow(a20, 2) * (6223 + 8631 * a21 + 5124 * pow(a21, 2) -
                          33000 * pow(a21, 3) - 39600 * pow(a21, 4)) +
           a20 * a21 *
               (-5488 + 9009 * a21 + 13940 * pow(a21, 2) - 3180 * pow(a21, 3) -
                23040 * pow(a21, 4)) +
           pow(a21, 2) * (637 - 4515 * a21 + 4436 * pow(a21, 2) +
                          4548 * pow(a21, 3) - 5040 * pow(a21, 4))));
}

template <typename T> static inline auto rk422_sol_2_a32(T a20, T a21) -> T {
  using std::pow;
  using std::sqrt;
  return (-247526048 * pow(a20, 5) - 44040528 * pow(a20, 6) +
          238942980 * pow(a20, 7) + 37257840 * pow(a20, 8) -
          36709200 * pow(a20, 9) - 17589312 * pow(a20, 10) -
          3359232 * pow(a20, 11) + 680031065 * pow(a20, 4) * a21 -
          720269298 * pow(a20, 5) * a21 - 755236800 * pow(a20, 6) * a21 +
          449114760 * pow(a20, 7) * a21 + 199357200 * pow(a20, 8) * a21 -
          14618880 * pow(a20, 9) * a21 - 14556672 * pow(a20, 10) * a21 -
          719558630 * pow(a20, 3) * pow(a21, 2) +
          903038850 * pow(a20, 4) * pow(a21, 2) -
          1277813700 * pow(a20, 5) * pow(a21, 2) -
          752646600 * pow(a20, 6) * pow(a21, 2) +
          608394240 * pow(a20, 7) * pow(a21, 2) +
          214228800 * pow(a20, 8) * pow(a21, 2) +
          1866240 * pow(a20, 9) * pow(a21, 2) +
          364647220 * pow(a20, 2) * pow(a21, 3) +
          343006020 * pow(a20, 3) * pow(a21, 3) +
          920622600 * pow(a20, 4) * pow(a21, 3) -
          2882084760 * pow(a20, 5) * pow(a21, 3) -
          687968640 * pow(a20, 6) * pow(a21, 3) +
          474647040 * pow(a20, 7) * pow(a21, 3) +
          117573120 * pow(a20, 8) * pow(a21, 3) - 86054290 * a20 * pow(a21, 4) -
          827087940 * pow(a20, 2) * pow(a21, 4) +
          1088040060 * pow(a20, 3) * pow(a21, 4) -
          601083720 * pow(a20, 4) * pow(a21, 4) -
          3092942880 * pow(a20, 5) * pow(a21, 4) -
          210107520 * pow(a20, 6) * pow(a21, 4) +
          235146240 * pow(a20, 7) * pow(a21, 4) + 6578299 * pow(a21, 5) +
          357901614 * a20 * pow(a21, 5) -
          409271760 * pow(a20, 2) * pow(a21, 5) +
          2025687960 * pow(a20, 3) * pow(a21, 5) -
          2431749600 * pow(a20, 4) * pow(a21, 5) -
          1821947904 * pow(a20, 5) * pow(a21, 5) +
          15676416 * pow(a20, 6) * pow(a21, 5) - 51272046 * pow(a21, 6) -
          215126460 * a20 * pow(a21, 6) +
          540608040 * pow(a20, 2) * pow(a21, 6) +
          396835200 * pow(a20, 3) * pow(a21, 6) -
          2489719680 * pow(a20, 4) * pow(a21, 6) -
          611380224 * pow(a20, 5) * pow(a21, 6) + 77928840 * pow(a21, 7) -
          351379080 * a20 * pow(a21, 7) +
          1043850240 * pow(a20, 2) * pow(a21, 7) -
          1440115200 * pow(a20, 3) * pow(a21, 7) -
          1108546560 * pow(a20, 4) * pow(a21, 7) + 17203320 * pow(a21, 8) +
          173579760 * a20 * pow(a21, 8) -
          215472960 * pow(a20, 2) * pow(a21, 8) -
          1002170880 * pow(a20, 3) * pow(a21, 8) - 74332080 * pow(a21, 9) +
          126593280 * a20 * pow(a21, 9) -
          520680960 * pow(a20, 2) * pow(a21, 9) + 43219008 * pow(a21, 10) -
          148925952 * a20 * pow(a21, 10) - 18289152 * pow(a21, 11) +
          6013 * pow(a20, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          6852 * pow(a20, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          2628 * pow(a20, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          2592 * pow(a20, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          3598 * a20 * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          12216 * pow(a20, 2) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          6912 * pow(a20, 3) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          4320 * pow(a20, 4) * a21 *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          204 * a20 * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          24264 * pow(a20, 2) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          8640 * pow(a20, 3) * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          17280 * a20 * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          25920 * pow(a20, 2) * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          21600 * a20 * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(216 * pow(a20, 4) + 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (-91 + 606 * a21 - 504 * pow(a21, 2)) -
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) -
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          1043 * pow(a21, 2) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) -
          5160 * pow(a21, 3) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          2556 * pow(a21, 4) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2)) +
          6048 * pow(a21, 5) *
              sqrt((36 * pow(a20, 4) + 18 * pow(a20, 3) * (11 + 8 * a21) +
                    pow(a21, 2) * (379 - 114 * a21 + 36 * pow(a21, 2)) +
                    2 * a20 * a21 * (-638 - 15 * a21 + 72 * pow(a21, 2)) +
                    pow(a20, 2) * (946 + 282 * a21 + 216 * pow(a21, 2))) *
                   pow(-216 * pow(a20, 4) - 6 * pow(a20, 3) * (53 + 24 * a21) +
                           pow(a21, 2) * (91 - 606 * a21 + 504 * pow(a21, 2)) +
                           2 * a20 * a21 *
                               (-392 + 495 * a21 + 648 * pow(a21, 2)) +
                           pow(a20, 2) * (889 + 1278 * a21 + 864 * pow(a21, 2)),
                       2))) /
         (81000. * pow(a20 - a21, 4) *
          (2160 * pow(a20, 6) + 12 * pow(a20, 5) * (319 + 480 * a21) -
           4 * pow(a20, 4) * (2362 + 1335 * a21 + 900 * pow(a21, 2)) -
           pow(a20, 3) * (4893 + 13828 * a21 + 34440 * pow(a21, 2) +
                          28800 * pow(a21, 3)) +
           pow(a20, 2) * (6223 + 8631 * a21 + 5124 * pow(a21, 2) -
                          33000 * pow(a21, 3) - 39600 * pow(a21, 4)) +
           a20 * a21 *
               (-5488 + 9009 * a21 + 13940 * pow(a21, 2) - 3180 * pow(a21, 3) -
                23040 * pow(a21, 4)) +
           pow(a21, 2) * (637 - 4515 * a21 + 4436 * pow(a21, 2) +
                          4548 * pow(a21, 3) - 5040 * pow(a21, 4))));
}

} // namespace HybridMethods