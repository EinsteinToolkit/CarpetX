#include <cmath>

namespace HybridMethods {

template <typename T> static inline auto rk431_sol_1_c3(T a30) -> T {
  using std::pow;
  using std::sqrt;
  return (6088608 * pow(3, 0.3333333333333333) * pow(a30, 7) +
          pow(3, 0.16666666666666666) *
              sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                   pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) *
              pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                      34992 * pow(a30, 5) +
                      sqrt(3) *
                          sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                               pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                  0.3333333333333333) -
          2592 * pow(a30, 6) *
              (-350 * pow(3, 0.3333333333333333) +
               81 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333)) -
          162 * pow(a30, 5) *
              (1935 * pow(3, 0.3333333333333333) +
               208 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333)) +
          9 * pow(a30, 4) *
              (2155 * pow(3, 0.3333333333333333) +
               1158 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) -
               648 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) -
          a30 *
              (10 * pow(3, 0.8333333333333334) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) -
               18 * pow(3, 0.16666666666666666) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                       34992 * pow(a30, 5) +
                       sqrt(3) *
                           sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                   0.6666666666666666)) -
          9 * pow(a30, 3) *
              (30 * pow(3, 0.3333333333333333) +
               61 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               158 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) +
          pow(a30, 2) *
              (pow(3, 0.3333333333333333) +
               120 * pow(3, 0.8333333333333334) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) +
               3 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               171 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666))) /
         (2. * a30 * (1 + 3 * a30) * (-1 + 12 * a30) * (-1 + 162 * a30) *
          pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                  34992 * pow(a30, 5) +
                  sqrt(3) * sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                 pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
              0.6666666666666666));
}

template <typename T> static inline auto rk431_sol_1_b0(T a30) -> T {
  using std::pow;
  using std::sqrt;
  return (57316896 * pow(3, 0.3333333333333333) * pow(a30, 6) -
          102036672 * pow(3, 0.3333333333333333) * pow(a30, 7) +
          27 * pow(3, 0.16666666666666666) *
              sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                   pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) *
              pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                      34992 * pow(a30, 5) +
                      sqrt(3) *
                          sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                               pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                  0.3333333333333333) -
          8748 * pow(a30, 5) *
              (949 * pow(3, 0.3333333333333333) +
               288 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333)) -
          a30 * (243 * pow(3, 0.8333333333333334) *
                     sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                          pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) +
                 34 * pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                              11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                              sqrt(3) *
                                  sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                       pow(-1 + 159 * a30 + 486 * pow(a30, 2),
                                           2)),
                          0.6666666666666666)) +
          1944 * pow(a30, 4) *
              (221 * pow(3, 0.3333333333333333) +
               224 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               60 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) +
          9 * pow(a30, 2) *
              (3 * pow(3, 0.3333333333333333) +
               324 * pow(3, 0.8333333333333334) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) +
               12 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               664 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) -
          9 * pow(a30, 3) *
              (747 * pow(3, 0.3333333333333333) +
               2232 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               8504 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666))) /
         (48. * a30 * (1 + 3 * a30) * (-1 + 12 * a30) * (-1 + 162 * a30) *
          pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                  34992 * pow(a30, 5) +
                  sqrt(3) * sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                 pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
              0.6666666666666666));
}

template <typename T> static inline auto rk431_sol_1_b1(T a30) -> T {
  using std::pow;
  using std::sqrt;
  return (6298560 * pow(3, 0.3333333333333333) * pow(a30, 6) +
          51018336 * pow(3, 0.3333333333333333) * pow(a30, 7) +
          27 * pow(3, 0.16666666666666666) *
              sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                   pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) *
              pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                      34992 * pow(a30, 5) +
                      sqrt(3) *
                          sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                               pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                  0.3333333333333333) +
          7290 * pow(a30, 5) *
              (-389 * pow(3, 0.3333333333333333) +
               108 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333)) +
          243 * pow(a30, 4) *
              (935 * pow(3, 0.3333333333333333) +
               790 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) -
               384 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) -
          9 * pow(a30, 2) *
              (-3 * pow(3, 0.3333333333333333) +
               162 * pow(3, 0.8333333333333334) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) -
               15 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) -
               304 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) -
          8 * a30 *
              (27 * pow(3, 0.8333333333333334) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) +
               2 * pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) -
          9 * pow(a30, 3) *
              (630 * pow(3, 0.3333333333333333) +
               2565 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               2528 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666))) /
         (12. * a30 * (1 + 3 * a30) * (-1 + 12 * a30) * (-1 + 162 * a30) *
          pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                  34992 * pow(a30, 5) +
                  sqrt(3) * sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                 pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
              0.6666666666666666));
}

template <typename T> static inline auto rk431_sol_1_b2(T a30) -> T {
  using std::pow;
  using std::sqrt;
  return (-31492800 * pow(3, 0.3333333333333333) * pow(a30, 6) -
          102036672 * pow(3, 0.3333333333333333) * pow(a30, 7) +
          9 * pow(3, 0.16666666666666666) *
              sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                   pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) *
              (pow(3, 0.6666666666666666) -
               15 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333)) -
          2916 * pow(a30, 5) *
              (-905 * pow(3, 0.3333333333333333) +
               216 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333)) +
          9 * pow(a30, 2) *
              (24 * pow(3, 0.3333333333333333) +
               324 * pow(3, 0.8333333333333334) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) -
               183 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) -
               1748 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) -
          486 * pow(a30, 4) *
              (-995 * pow(3, 0.3333333333333333) +
               208 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) -
               1104 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) -
          a30 *
              (351 * pow(3, 0.8333333333333334) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) -
               9 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) -
               92 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) +
          18 * pow(a30, 3) *
              (-2115 * pow(3, 0.3333333333333333) +
               1737 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               7268 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666))) /
         (48. * a30 * (1 + 3 * a30) * (-1 + 12 * a30) * (-1 + 162 * a30) *
          pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                  34992 * pow(a30, 5) +
                  sqrt(3) * sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                 pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
              0.6666666666666666));
}

template <typename T> static inline auto rk431_sol_1_b3(T a30) -> T {
  using std::pow;
  using std::sqrt;
  return (3 *
          (-756 * pow(3, 0.6666666666666666) * pow(a30, 3) +
           pow(3, 0.3333333333333333) *
               pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                       34992 * pow(a30, 5) +
                       sqrt(3) *
                           sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                   0.6666666666666666) +
           a30 * (pow(3, 0.6666666666666666) -
                  6 * pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                              11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                              sqrt(3) *
                                  sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                       pow(-1 + 159 * a30 + 486 * pow(a30, 2),
                                           2)),
                          0.3333333333333333)) +
           3 * pow(a30, 2) *
               (17 * pow(3, 0.6666666666666666) +
                24 * pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                             11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                             sqrt(3) *
                                 sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                      pow(-1 + 159 * a30 + 486 * pow(a30, 2),
                                          2)),
                         0.3333333333333333)))) /
         (16. * a30 * (1 + 3 * a30) * (-1 + 12 * a30) *
          pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                  34992 * pow(a30, 5) +
                  sqrt(3) * sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                 pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
              0.3333333333333333));
}

template <typename T> static inline auto rk431_sol_1_a31(T a30) -> T {
  using std::pow;
  using std::sqrt;
  return (4269024 * pow(3, 0.3333333333333333) * pow(a30, 7) -
          45349632 * pow(3, 0.3333333333333333) * pow(a30, 8) +
          3 * pow(3, 0.16666666666666666) *
              sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                   pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) *
              pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                      34992 * pow(a30, 5) +
                      sqrt(3) *
                          sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                               pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                  0.3333333333333333) -
          1296 * pow(a30, 6) *
              (-3005 * pow(3, 0.3333333333333333) +
               702 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333)) +
          9 * pow(a30, 4) *
              (4585 * pow(3, 0.3333333333333333) +
               5018 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) -
               4472 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) +
          3 * pow(a30, 3) *
              (-238 * pow(3, 0.3333333333333333) +
               432 * pow(3, 0.8333333333333334) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) -
               793 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) -
               510 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) -
          a30 *
              (26 * pow(3, 0.8333333333333334) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) +
               6 * pow(3, 0.16666666666666666) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               3 * pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) +
          pow(a30, 2) *
              (3 * pow(3, 0.3333333333333333) +
               204 * pow(3, 0.8333333333333334) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) +
               13 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               497 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) -
          54 * pow(a30, 5) *
              (13435 * pow(3, 0.3333333333333333) +
               2704 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               1728 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666))) /
         (8. * a30 * (1 + 3 * a30) * (-1 + 12 * a30) * (-1 + 162 * a30) *
          pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                  34992 * pow(a30, 5) +
                  sqrt(3) * sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                 pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
              0.6666666666666666));
}

template <typename T> static inline auto rk431_sol_1_a32(T a30) -> T {
  using std::pow;
  using std::sqrt;
  return (20085408 * pow(3, 0.3333333333333333) * pow(a30, 7) +
          45349632 * pow(3, 0.3333333333333333) * pow(a30, 8) +
          pow(3, 0.16666666666666666) *
              sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                   pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) *
              pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                      34992 * pow(a30, 5) +
                      sqrt(3) *
                          sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                               pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                  0.3333333333333333) +
          1296 * pow(a30, 6) *
              (-205 * pow(3, 0.3333333333333333) +
               54 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333)) -
          9 * pow(a30, 4) *
              (-4035 * pow(3, 0.3333333333333333) +
               386 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) -
               616 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) -
          a30 *
              (14 * pow(3, 0.8333333333333334) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) -
               78 * pow(3, 0.16666666666666666) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                       34992 * pow(a30, 5) +
                       sqrt(3) *
                           sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                   0.6666666666666666)) +
          pow(a30, 2) *
              (pow(3, 0.3333333333333333) +
               276 * pow(3, 0.8333333333333334) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) -
               pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               179 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) +
          54 * pow(a30, 5) *
              (-9785 * pow(3, 0.3333333333333333) +
               208 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               864 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666)) -
          3 * pow(a30, 3) *
              (122 * pow(3, 0.3333333333333333) +
               432 * pow(3, 0.8333333333333334) *
                   sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                        pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)) -
               61 * pow(3, 0.6666666666666666) *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.3333333333333333) +
               930 *
                   pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) +
                           11448 * pow(a30, 4) - 34992 * pow(a30, 5) +
                           sqrt(3) *
                               sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                    pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
                       0.6666666666666666))) /
         (8. * a30 * (1 + 3 * a30) * (-1 + 12 * a30) * (-1 + 162 * a30) *
          pow(39 * pow(a30, 2) - 1179 * pow(a30, 3) + 11448 * pow(a30, 4) -
                  34992 * pow(a30, 5) +
                  sqrt(3) * sqrt(pow(a30, 3) * pow(-1 + 12 * a30, 3) *
                                 pow(-1 + 159 * a30 + 486 * pow(a30, 2), 2)),
              0.6666666666666666));
}

} // namespace HybridMethods