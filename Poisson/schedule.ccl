# Schedule definitions for thorn Poisson

SCHEDULE Poisson_Source AT initial BEFORE PDESolvers_Solve
{
  LANG: C
  WRITES: src(everywhere)
} "Set source function"

SCHEDULE Poisson_ChooseInitialGuess AT initial BEFORE Poisson_Init
{
  LANG: C
  OPTIONS: GLOBAL
  WRITES: need_initial_guess
} "Set need_initial_guess"

SCHEDULE Poisson_Init AT initial BEFORE PDESolvers_Solve IF Poisson::need_initial_guess
{
  LANG: C
  WRITES: sol(interior)
} "Initialize solution"

SCHEDULE Poisson_Sync AT initial AFTER Poisson_Init BEFORE PDESolvers_Solve # IF Poisson::need_initial_guess
{
  LANG: C
  OPTIONS: global
  SYNC: sol
} "Synchronize solution"

SCHEDULE Poisson_Boundaries AT initial AFTER Poisson_Sync BEFORE PDESolvers_Solve # IF Poisson::need_initial_guess
{
  LANG: C
  WRITES: sol(boundary)
} "Initialize boundaries of solution"



SCHEDULE Poisson_Sync IN PDESolvers_Residual
{
  LANG: C
  OPTIONS: global
  SYNC: sol
} "Synchronize solution"

SCHEDULE Poisson_Boundaries IN PDESolvers_Residual AFTER Poisson_Sync
{
  LANG: C
  WRITES: sol(boundary)
} "Initialize boundaries of solution"

SCHEDULE Poisson_Residual IN PDESolvers_Residual AFTER (Poisson_Sync, Poisson_Boundaries)
{
  LANG: C
  READS: PDESolvers::point_type(everywhere)
  READS: sol(everywhere)
  READS: src(interior)
  WRITES: res(interior)
} "Evaluate residual"

# SCHEDULE Poisson_ResidualBoundaries IN PDESolvers_Residual AFTER Poisson_Sync
# {
#   LANG: C
#   READS: PDESolvers::point_type(everywhere)
#   READS: sol(boundary)
#   READS: src(boundary)
#   WRITES: res(boundary)
# } "Evaluate residual on boundaries"
# 
# SCHEDULE Poisson_ResidualSync IN PDESolvers_Residual AFTER (Poisson_Residual, Poisson_ResidualBoundaries)
# {
#   LANG: C
#   OPTIONS: global
#   SYNC: res
# } "Synchronize residual"

SCHEDULE Poisson_Sync IN PDESolvers_Jacobian
{
  LANG: C
  OPTIONS: global
  SYNC: sol
} "Synchronize solution"

SCHEDULE Poisson_Boundaries IN PDESolvers_Jacobian AFTER Poisson_Sync
{
  LANG: C
  WRITES: sol(boundary)
} "Initialize boundaries of solution"

SCHEDULE Poisson_Jacobian IN PDESolvers_Jacobian AFTER (Poisson_Sync, Poisson_Boundaries)
{
  LANG: C
  READS: PDESolvers::point_type(everywhere)
  READS: PDESolvers::idx(everywhere)
  READS: sol(everywhere)
  READS: src(interior)
} "Evaluate Jacobian"



SCHEDULE GROUP PDESolvers_Residual AT initial AFTER PDESolvers_Solve
{
} "Evaluate residual after solving"

SCHEDULE Poisson_ResidualSync AT initial AFTER PDESolvers_Residual
{
  LANG: C
  OPTIONS: global
  SYNC: res
} "Synchronize residual"

SCHEDULE Poisson_ResidualBoundaries AT initial AFTER Poisson_ResidualSync
{
  LANG: C
  READS: PDESolvers::point_type(boundary)
  WRITES: res(boundary)
} "Set residual to zero on boundaries"
