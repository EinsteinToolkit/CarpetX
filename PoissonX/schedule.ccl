# Schedule definitions for thorn PoissonX

SCHEDULE PoissonX_Source AT initial BEFORE PDESolvers_Solve
{
  LANG: C
  WRITES: src(everywhere)
} "Set source function"

SCHEDULE PoissonX_ChooseInitialGuess AT initial BEFORE PoissonX_Init
{
  LANG: C
  OPTIONS: GLOBAL
  WRITES: need_initial_guess
} "Set need_initial_guess"

SCHEDULE PoissonX_Init AT initial BEFORE PDESolvers_Solve IF PoissonX::need_initial_guess
{
  LANG: C
  WRITES: sol(interior)
} "Initialize solution"

SCHEDULE PoissonX_Sync AT initial AFTER PoissonX_Init BEFORE PDESolvers_Solve # IF PoissonX::need_initial_guess
{
  LANG: C
  OPTIONS: global
  SYNC: sol
} "Synchronize solution"

SCHEDULE PoissonX_Boundaries AT initial AFTER PoissonX_Sync BEFORE PDESolvers_Solve # IF PoissonX::need_initial_guess
{
  LANG: C
  WRITES: sol(boundary)
} "Initialize boundaries of solution"



SCHEDULE PoissonX_Sync IN PDESolvers_Residual
{
  LANG: C
  OPTIONS: global
  SYNC: sol
} "Synchronize solution"

SCHEDULE PoissonX_Boundaries IN PDESolvers_Residual AFTER PoissonX_Sync
{
  LANG: C
  WRITES: sol(boundary)
} "Initialize boundaries of solution"

SCHEDULE PoissonX_Residual IN PDESolvers_Residual AFTER (PoissonX_Sync, PoissonX_Boundaries)
{
  LANG: C
  READS: PDESolvers::point_type(everywhere)
  READS: sol(everywhere)
  READS: src(interior)
  WRITES: res(interior)
} "Evaluate residual"

# SCHEDULE PoissonX_ResidualBoundaries IN PDESolvers_Residual AFTER PoissonX_Sync
# {
#   LANG: C
#   READS: PDESolvers::point_type(everywhere)
#   READS: sol(boundary)
#   READS: src(boundary)
#   WRITES: res(boundary)
# } "Evaluate residual on boundaries"
# 
# SCHEDULE PoissonX_ResidualSync IN PDESolvers_Residual AFTER (PoissonX_Residual, PoissonX_ResidualBoundaries)
# {
#   LANG: C
#   OPTIONS: global
#   SYNC: res
# } "Synchronize residual"

SCHEDULE PoissonX_Sync IN PDESolvers_Jacobian
{
  LANG: C
  OPTIONS: global
  SYNC: sol
} "Synchronize solution"

SCHEDULE PoissonX_Boundaries IN PDESolvers_Jacobian AFTER PoissonX_Sync
{
  LANG: C
  WRITES: sol(boundary)
} "Initialize boundaries of solution"

SCHEDULE PoissonX_Jacobian IN PDESolvers_Jacobian AFTER (PoissonX_Sync, PoissonX_Boundaries)
{
  LANG: C
  READS: PDESolvers::point_type(everywhere)
  READS: PDESolvers::idx(everywhere)
  READS: sol(everywhere)
  READS: src(interior)
} "Evaluate Jacobian"



SCHEDULE GROUP PDESolvers_Residual AT initial AFTER PDESolvers_Solve
{
} "Evaluate residual after solving"

SCHEDULE PoissonX_ResidualSync AT initial AFTER PDESolvers_Residual
{
  LANG: C
  OPTIONS: global
  SYNC: res
} "Synchronize residual"

SCHEDULE PoissonX_ResidualBoundaries AT initial AFTER PoissonX_ResidualSync
{
  LANG: C
  READS: PDESolvers::point_type(boundary)
  WRITES: res(boundary)
} "Set residual to zero on boundaries"
