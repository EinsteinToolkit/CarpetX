Cactus Code Thorn SyncTestX
Author(s)    : Samuel Cupp
Maintainer(s): Cactus team
Licence      : LGPL
--------------------------------------------------------------------------

1. Purpose

The SyncTestX thorn provides a comparison test for the communication
overhead of Carpet and CarpetX. The thorn is compatible with both
without changes, and a weak scaling test is provided in the par
directory.

====================================================================
**********        Running the Weak Scaling Test           **********
====================================================================

1) Make two directories, one for the Carpet build, and one for the
   CarpetX build.

2) In the Carpet directory, run GetComponents using the carpet.th
   thornlist provided in SyncTestX/par/ and compile the toolkit in
   the newly created Cactus directory.

3) In the CarpetX directory, run GetComponents using the amrex.th
   thornlist provided in SyncTestX/par/ and compile the toolkit in
   the newly created Cactus directory.

4) For the Carpet simulations, run the sing.par, doub.par, trip.par,
   and quad.par. The TimerReport thorn will output the timing data to
   screen, so pipe the output into a file for later comparisons.

5) For the CarpetX simulations, use amrex.par. Near the top of the parfile
   is the variable yfac. Changing this variable will modify various values
   to generate the weak scaling test. The values of {1,2,3,4} correspond to
   the Carpet parfiles of {sing, doub, trip, quad}. As with the Carpet
   simulations, the TimerReport thorn will output the timing data to
   screen, so pipe the output into a file for later comparisons.


====================================================================
**********       Modifying the Weak Scaling Test          **********
====================================================================

1) To make a new scaling test, first start with amrex.par. Using this
   as a base, change the grids, make any adjustments to the refinement
   criteria, and set up any new thorns for performing calculations.
   If new thorns are added, equivalent thorns must be added to Carpet
   parfiles to ensure a meaningful comparison. Only thorns being
   compared should differ, and any other thorns should be identical,
   if possible.

2) The Carpet thorns use CarpetRegrid2 to set the mesh refinement to match
   the grid generated by CarpetX. Begin by uncommenting the IO in the
   amrex.par file. Use a visualisation software (such as visit) to
   see where the mesh refinement occurs and set the CarpetRegrid2
   parameters to match.

3) This will rarely give the exact same grid, so the IO in the Carpet
   parfiles allows for the two grids to be plotted simultaneously.
   Fiddle with the CarpetRegrid2 parameters until the meshes match.

4) Repeat this for every parfile in the test. This must be done
   for each parfile because we are explicitly setting the refinement
   zones. If the test is only changing a single dimension, then the other
   two dimensions shouldn't change.

5) Once the meshes match for each comparison point of the test,
   the IO can be safely turned off, and the test is ready.
