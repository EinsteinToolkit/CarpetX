# Schedule definitions for thorn TestSubcyclingMC

STORAGE: ustate pstate wstate k1 k2 k3 k4


SCHEDULE TestSubcyclingMC_Initial AT initial
{
  LANG: C
  WRITES: ustate(interior)
  WRITES: Y1(interior) Y2(interior) Y3(interior) Y4(interior)
  WRITES: k1(interior) k2(interior) k3(interior) k4(interior)
  SYNC: ustate
  SYNC: Y1 Y2 Y3 Y4
  SYNC: k1 k2 k3 k4
} "Initialize scalar wave state"

SCHEDULE TestSubcyclingMC_Sync AT postregrid
{
  LANG: C
  OPTIONS: global
  SYNC: ustate
} "Synchronize"

SCHEDULE GROUP TestSubcyclingMC_RK4Group AT evol
{
} "RK4"

SCHEDULE TestSubcyclingMC_SetP IN TestSubcyclingMC_RK4Group
{
  LANG: C
  READS: ustate(interior)
  WRITES: pstate(interior)
  SYNC: pstate k1 k2 k3 k4
} "Save previous ustate and Sync ks"

if (use_subcycling_wip) {
  SCHEDULE TestSubcyclingMC_CalcYfs IN TestSubcyclingMC_RK4Group AFTER TestSubcyclingMC_SetP BEFORE TestSubcyclingMC_CalcK1
  {
    LANG: C
    READS: pstate(everywhere)
    READS: k1(everywhere) k2(everywhere) k3(everywhere) k4(everywhere)
    WRITES: Y1(everywhere) Y2(everywhere) Y3(everywhere) Y4(everywhere)
    #SYNC: Y1 Y2 Y3 Y4
  } "Calculate fine Ys from coarse ks"
}

SCHEDULE TestSubcyclingMC_CalcK1 IN TestSubcyclingMC_RK4Group AFTER TestSubcyclingMC_SetP
{
  LANG: C
  READS: Y1(everywhere)
  # calculate k1 and update ustate
  READS: ustate(everywhere)
  WRITES: k1(interior) ustate(everywhere)
  # calculate Y2
  READS: pstate(interior)
  WRITES: wstate(interior)
  SYNC: wstate
} "Calculate k1 and Y2"

SCHEDULE TestSubcyclingMC_CalcK2 IN TestSubcyclingMC_RK4Group AFTER TestSubcyclingMC_CalcK1
{
  LANG: C
  READS: Y2(everywhere)
  # calculate k2 and update ustate
  READS: wstate(everywhere) ustate(interior)
  WRITES: k2(interior) ustate(interior)
  # calculate Y3
  READS: pstate(interior)
  WRITES: wstate(everywhere)
  SYNC: wstate
} "Calculate k2 and Y3"

SCHEDULE TestSubcyclingMC_CalcK3 IN TestSubcyclingMC_RK4Group AFTER TestSubcyclingMC_CalcK2
{
  LANG: C
  READS: Y3(everywhere)
  # calculate k3 and update ustate
  READS: wstate(everywhere) ustate(interior)
  WRITES: k3(interior) ustate(interior)
  # calculate Y4
  READS: pstate(interior)
  WRITES: wstate(everywhere)
  SYNC: wstate
} "Calculate k3 and Y4"

SCHEDULE TestSubcyclingMC_CalcK4 IN TestSubcyclingMC_RK4Group AFTER TestSubcyclingMC_CalcK3
{
  LANG: C
  READS: Y4(everywhere)
  WRITES: wstate(everywhere) # write ghost points only here
  # calculate k4 and update ustate
  READS: wstate(everywhere) ustate(interior)
  WRITES: k4(interior) ustate(interior)
  SYNC: ustate
} "Calculate k4"
