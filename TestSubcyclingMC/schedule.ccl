# Schedule definitions for thorn TestSubcyclingMC

STORAGE: ustate pstate wstate k1 k2 k3 k4


SCHEDULE TestSubcyclingMC_Initial AT initial
{
  LANG: C
  WRITES: ustate(interior)
  WRITES: Y1(interior) Y2(interior) Y3(interior) Y4(interior)
  SYNC: ustate
  SYNC: Y1 Y2 Y3 Y4
} "Initialize scalar wave state"


SCHEDULE GROUP TestSubcyclingMC_RK4Group AT evol
{
} "RK4"

SCHEDULE TestSubcyclingMC_CalcY1 IN TestSubcyclingMC_RK4Group
{
  LANG: C
  # set pstate
  READS: ustate(interior)
  WRITES: pstate(interior)
  # calculate Y1
  WRITES: wstate(interior)
  SYNC: wstate pstate
} "calc Y1"

SCHEDULE TestSubcyclingMC_CalcY2 IN TestSubcyclingMC_RK4Group AFTER TestSubcyclingMC_CalcY1
{
  LANG: C
  READS: Y1(everywhere)
  # calculate k1
  READS: wstate(everywhere)
  WRITES: k1(interior)
  # update ustate
  READS: ustate(interior)
  WRITES: ustate(interior)
  # calculate Y2
  READS: pstate(interior)
  WRITES: wstate(interior)
  SYNC: wstate k1
} "calc Y2"

SCHEDULE TestSubcyclingMC_CalcY3 IN TestSubcyclingMC_RK4Group AFTER TestSubcyclingMC_CalcY2
{
  LANG: C
  READS: Y2(everywhere)
  # calculate k2
  READS: wstate(everywhere)
  WRITES: k2(interior)
  # update ustate
  READS: ustate(interior)
  WRITES: ustate(interior)
  # calculate Y3
  READS: pstate(interior)
  WRITES: wstate(interior)
  SYNC: wstate k2
} "calc Y3"

SCHEDULE TestSubcyclingMC_CalcY4 IN TestSubcyclingMC_RK4Group AFTER TestSubcyclingMC_CalcY3
{
  LANG: C
  READS: Y3(everywhere)
  # calculate k3
  READS: wstate(everywhere)
  WRITES: k3(interior)
  # update ustate
  READS: ustate(interior)
  WRITES: ustate(interior)
  # calculate Y4
  READS: pstate(interior)
  WRITES: wstate(interior)
  SYNC: wstate k3
} "calc Y4"

SCHEDULE TestSubcyclingMC_UpdateU IN TestSubcyclingMC_RK4Group AFTER TestSubcyclingMC_CalcY4
{
  LANG: C
  READS: Y4(everywhere)
  # calculate k4
  READS: wstate(everywhere)
  WRITES: wstate(interior) # fake
  WRITES: k4(interior)
  # update ustate
  READS: ustate(interior)
  WRITES: ustate(interior)
  SYNC: ustate k4
} "update ustate"

if (use_subcycling_wip) {
SCHEDULE TestSubcyclingMC_CalcYfs IN TestSubcyclingMC_RK4Group AFTER TestSubcyclingMC_UpdateU
{
  LANG: C
  READS: pstate(everywhere)
  READS: k1(everywhere) k2(everywhere) k3(everywhere) k4(everywhere)
  WRITES: Y1(everywhere) Y2(everywhere) Y3(everywhere) Y4(everywhere)
  #SYNC: Y1 Y2 Y3 Y4
} "calc fine Ys from coarse ks"
}
