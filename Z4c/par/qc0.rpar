#!/usr/bin/env python

from math import *
import re
from string import Template
import sys

################################################################################

domain_size = 128.0
domain_spacing = 1.0
fine_box_size = 2.0
# fine_box_spacing = 1/16.0
fine_box_spacing = 1/24.0
# fine_box_spacing = 1/32.0

dtfac = 1/4.0

################################################################################

xmin = -domain_size
xmax = +domain_size
nlevels = int(round(log(1.0 * domain_spacing / fine_box_spacing, 2)) + 1)
ncells = int(round(2.0 * domain_size / domain_spacing))

large_box_size = fine_box_size * 2 ** (nlevels - 2)
error_threshold = 1.0 / large_box_size

out_every = int(round(1.0 / dtfac * 2 ** (nlevels - 1)))

try:
    run_test = int("@RUN_TEST@")
except:
    run_test = 0
final_time = 1.0/16 if run_test else 100.0

parfile = """
# run.me:
# run.cores: 40
# run.memory: 1.0e9
# run.time: 7200.0

ActiveThorns = "
    ADMBase
    CarpetX
    Coordinates
    ErrorEstimator
    Formaline
    IOUtil
    ODESolvers
    SystemTopology
    TimerReport
    TmunuBase
    TwoPunctures
    Weyl
    Z4c
    #TODO Z4cNRPy
"

# domain_size = $domain_size
# domain_spacing = $domain_spacing
# fine_box_size = $fine_box_size
# fine_box_spacing = $fine_box_spacing
# dtfac = $dtfac

Cactus::cctk_show_schedule = no

Cactus::presync_mode = "mixed-error"

Cactus::terminate = "any"
Cactus::cctk_itlast = 1000000000
Cactus::cctk_final_time = $final_time
# Cactus::max_runtime = 30   # minutes
Cactus::max_runtime = 23*60+30   # minutes

CarpetX::verbose = no
CarpetX::poison_undefined_values = no

CarpetX::xmin = $xmin
CarpetX::ymin = $xmin
CarpetX::zmin = 0.0

CarpetX::xmax = $xmax
CarpetX::ymax = $xmax
CarpetX::zmax = $xmax

CarpetX::ncells_x = $ncells
CarpetX::ncells_y = $ncells
CarpetX::ncells_z = $ncells / 2

CarpetX::max_tile_size_x = 1024000
CarpetX::max_tile_size_y = 4
CarpetX::max_tile_size_z = 4

CarpetX::reflection_z = yes

CarpetX::boundary_x = "dirichlet"
CarpetX::boundary_y = "dirichlet"
CarpetX::boundary_upper_x = "dirichlet"
CarpetX::boundary_upper_y = "dirichlet"
CarpetX::boundary_upper_z = "dirichlet"

CarpetX::ghost_size = 3

CarpetX::max_num_levels = $nlevels
CarpetX::regrid_every = 16
CarpetX::regrid_error_threshold = $error_threshold

ErrorEstimator::region_shape = "cube"
ErrorEstimator::scale_by_resolution = yes

CarpetX::prolongation_type = "ddf"
CarpetX::prolongation_order = 5

ODESolvers::verbose = no
ODESolvers::method = "RK4"
CarpetX::dtfac = $dtfac

ADMBase::initial_data = "TwoPunctures"
ADMBase::initial_lapse = "TwoPunctures-averaged"

# QC-0 setup
TwoPunctures::par_b =  1.168642873
TwoPunctures::par_m_plus =  0.453
TwoPunctures::par_m_minus =  0.453
TwoPunctures::par_P_plus [1] = +0.3331917498
TwoPunctures::par_P_minus[1] = -0.3331917498

TwoPunctures::grid_setup_method = "evaluation"

TwoPunctures::TP_epsilon = 1.0e-2
TwoPunctures::TP_Tiny    = 1.0e-2

TwoPunctures::verbose = yes

Z4c::calc_ADM_vars = yes                  # for Weyl
Z4c::calc_ADMRHS_vars = yes               # for Weyl
Z4c::calc_constraints = yes

Z4c::chi_floor = 1.0e-6
Z4c::alphaG_floor = 1.0e-8
Z4c::epsdiss = 0.32

#TODO # Z4cNRPy::chi_floor = 1.0e-6
#TODO # Z4cNRPy::alphaG_floor = 1.0e-8
#TODO # Z4cNRPy::eps_diss = 0.32

IO::out_dir = $$parfile
IO::out_every = $out_every
IO::out_mode = "np"                       # "proc", "np", "onefile"
IO::out_proc_every = 1

IO::checkpoint_dir = "../checkpoints"
IO::checkpoint_ID = yes
IO::checkpoint_every = 0
IO::checkpoint_every_walltime_hours = 1.0
IO::checkpoint_on_terminate = yes
CarpetX::checkpoint_method = "openpmd"

IO::recover_dir = "../checkpoints"
IO::recover = "autoprobe"
CarpetX::recover_method = "openpmd"

CarpetX::out_metadata = yes

CarpetX::out_silo_vars = "
    ADMBase::metric
    ADMBase::curv
    ADMBase::lapse
    ADMBase::shift
    Weyl::Psi4re
    Weyl::Psi4im
    Z4c::allC
    #TODO Z4cNRPy::allCGF
    CarpetX::regrid_error
"

CarpetX::out_openpmd_vars = "
    ADMBase::metric
    ADMBase::curv
    ADMBase::lapse
    ADMBase::shift
    Weyl::Psi4re
    Weyl::Psi4im
    Z4c::allC
    #TODO Z4cNRPy::allCGF
    CarpetX::regrid_error
"

CarpetX::out_tsv_vars = "
    ADMBase::metric
    ADMBase::curv
    ADMBase::lapse
    ADMBase::shift
    Weyl::Psi4re
    Weyl::Psi4im
    Z4c::allC
    #TODO Z4cNRPy::allCGF
    CarpetX::regrid_error
"

TimerReport::out_every = $out_every
TimerReport::out_filename = "TimerReport"
TimerReport::output_schedule_timers = no
TimerReport::n_top_timers = 100
"""

open(re.sub(r'(.*)\.rpar$', r'\1.par', sys.argv[0]), 'w').write(
    re.sub(r'\n *',r'\n', Template(parfile).substitute(locals())))
