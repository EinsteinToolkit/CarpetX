# Option list for the Einstein Toolkit

# The "weird" options here should probably be made the default in the
# ET instead of being set here.

# Whenever this version string changes, the application is configured
# and rebuilt from scratch
VERSION = actions-cpu-real32-2023-02-04

CPP = cpp
CC = gcc
CXX = g++
FPP = cpp
FC = gfortran
F90 = gfortran

# Note: Use -fhardened for GCC14
# Note: GCC 13.2 with -ftrivial-auto-var-init=pattern mis-compiles (?) C++ lambdas

CFLAGS = -D_FORTIFY_SOURCE=3 -D_GLIBCXX_ASSERTIONS -fPIE -fcf-protection=full -fstack-clash-protection -fstack-protector-strong -ftrivial-auto-var-init=pattern -g -march=x86-64-v3 -pie -pipe -std=gnu11
CXXFLAGS = -D_FORTIFY_SOURCE=3 -D_GLIBCXX_ASSERTIONS -fPIE -fcf-protection=full -fstack-clash-protection -fstack-protector-strong -g -march=x86-64-v3 -pie -pipe -std=gnu++17
FPPFLAGS = -traditional
F90FLAGS = -fPIE -fcf-protection=full -fcray-pointer -ffixed-line-length-none -finit-character=65 -finit-integer=42424242 -finit-real=nan -fstack-clash-protection -fstack-protector-strong -g -march=x86-64-v3 -pie -pipe
LDFLAGS = -L/usr/lib/x86_64-linux-gnu -Wl,-rpath,/usr/local/lib -Wl,-z,relro,-z,now

C_LINE_DIRECTIVES = yes
F_LINE_DIRECTIVES = yes

INTEGER_PRECISION = 4
REAL_PRECISION = 4

DEBUG = no
# -fsanitize=address
CPP_DEBUG_FLAGS = -DCARPET_DEBUG
C_DEBUG_FLAGS = -fbounds-check -fsanitize=undefined -fstack-protector-all -ftrapv
CXX_DEBUG_FLAGS = -fbounds-check -fsanitize=undefined -fstack-protector-all -ftrapv
FPP_DEBUG_FLAGS = -DCARPET_DEBUG
F90_DEBUG_FLAGS = -fcheck=bounds,do,mem,pointer,recursion -fsanitize=undefined -fstack-protector-all -ftrapv

OPTIMISE = yes
C_OPTIMISE_FLAGS = -O3 -fcx-limited-range -fexcess-precision=fast -ffp-contract=fast -fno-math-errno -fno-rounding-math -fno-signaling-nans
CXX_OPTIMISE_FLAGS = -O3 -fcx-limited-range -fexcess-precision=fast -ffp-contract=fast -fno-math-errno -fno-rounding-math -fno-signaling-nans
F90_OPTIMISE_FLAGS = -O3 -fcx-limited-range -fexcess-precision=fast -ffp-contract=fast -fno-math-errno -fno-rounding-math -fno-signaling-nans

OPENMP = yes
CPP_OPENMP_FLAGS = -fopenmp
FPP_OPENMP_FLAGS = -D_OPENMP
F90_OPENMP_FLAGS = -fopenmp

# -fanalyzer: finds only possible null dereferences in std::vector
WARN = yes
CPP_WARN_FLAGS = -Wall
C_WARN_FLAGS =
CXX_WARN_FLAGS =
FPP_WARN_FLAGS = -Wall
F90_WARN_FLAGS = -Wall -Wshadow -Wsurprising

ADIOS2_DIR = /usr/local
ADIOS2_LIBS = adios2_cxx11_mpi adios2_cxx11
AMREX_DIR = /usr/local
# ASDF_CXX_DIR = /usr/local
BLAS_DIR = /usr
BOOST_DIR = /usr
FFTW3_DIR = /usr
GSL_DIR = /usr
HDF5_DIR = /usr/lib/x86_64-linux-gnu/hdf5/serial
HDF5_ENABLE_CXX = yes
HDF5_ENABLE_FORTRAN = yes
HDF5_INC_DIRS = /usr/lib/x86_64-linux-gnu/hdf5/serial/include
HDF5_LIB_DIRS = /usr/lib/x86_64-linux-gnu/hdf5/serial/lib
HDF5_LIBS = hdf5_hl_cpp hdf5_cpp hdf5hl_fortran hdf5_fortran hdf5_hl hdf5
HWLOC_DIR = /usr
# JEMALLOC_DIR = /usr/local
LAPACK_DIR = /usr
# LIBJPEG_DIR = /usr
# LORENE_DIR = /usr/local
MPI_DIR = /usr
NSIMD_DIR = /usr/local
NSIMD_SIMD = AVX2
OPENBLAS_DIR = /usr
OPENPMD_API_DIR = /usr/local
# OPENSSL_DIR = /usr
# PAPI_DIR = /usr/local
PETSC_DIR = /usr/lib/petsc
PETSC_LIBS = petsc_real
PETSC_ARCH_LIBS = m
PTHREADS_DIR = NO_BUILD
# REPRIMAND_DIR = /usr/local
# REPRIMAND_LIBS = RePrimAnd
# RNPLETAL_DIR = /usr/local
SILO_DIR = /usr/local
SIMULATIONIO_DIR = /usr/local
SSHT_DIR = /usr/local
YAML_CPP_DIR = /usr/local
ZLIB_DIR = /usr
