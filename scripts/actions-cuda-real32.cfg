# Option list for the Einstein Toolkit

# The "weird" options here should probably be made the default in the
# ET instead of being set here.

# Whenever this version string changes, the application is configured
# and rebuilt from scratch
VERSION = actions-cuda-real32-2023-02-04

CPP = cpp
CC = gcc
CXX = nvcc -x cu
FPP = cpp
FC = gfortran
F90 = gfortran
LD = nvcc

CPPFLAGS = -DSIMD_CPU
CFLAGS = -pipe -g -std=gnu11
# - We use "--relocatable-device-code=true" to allow building with
#   debug versions of AMReX
#   <https://github.com/AMReX-Codes/amrex/issues/1829>
# - We use "--objdir-as-tempdir" to prevent errors such as
#   Call parameter type does not match function signature!
#     %tmp = load double, double* %x.addr, align 8, !dbg !1483
#     float  %1 = call i32 @__isnanf(double %tmp), !dbg !1483
CXXFLAGS = -pipe -g0 -std=c++17 --compiler-options -std=gnu++17 --expt-relaxed-constexpr --extended-lambda --gpu-architecture sm_70 --forward-unknown-to-host-compiler --Werror ext-lambda-captures-this --relocatable-device-code=true --objdir-as-tempdir
FPPFLAGS = -traditional
F90FLAGS = -pipe -g -fcray-pointer -ffixed-line-length-none
LIBS = nvToolsExt gfortran

C_LINE_DIRECTIVES = yes
F_LINE_DIRECTIVES = yes

INTEGER_PRECISION = 4
REAL_PRECISION = 4

# CUDA does not support these
DISABLE_INT16 = yes
DISABLE_REAL16 = yes

DEBUG = no
# -fsanitize=address
CPP_DEBUG_FLAGS = -DCARPET_DEBUG
C_DEBUG_FLAGS = -fbounds-check -fsanitize=undefined -fstack-protector-all -ftrapv
CXX_DEBUG_FLAGS = -fbounds-check -fsanitize=undefined -fstack-protector-all -ftrapv
FPP_DEBUG_FLAGS = -DCARPET_DEBUG
F90_DEBUG_FLAGS = -fcheck=bounds,do,mem,pointer,recursion -finit-character=65 -finit-integer=42424242 -finit-real=nan -fsanitize=undefined -fstack-protector-all -ftrapv

OPTIMISE = yes
C_OPTIMISE_FLAGS = -O3 -fcx-limited-range -fexcess-precision=fast -ffp-contract=fast -fno-math-errno -fno-rounding-math -fno-signaling-nans
CXX_OPTIMISE_FLAGS = -O3 -fcx-limited-range -fexcess-precision=fast -ffp-contract=fast -fno-math-errno -fno-rounding-math -fno-signaling-nans
F90_OPTIMISE_FLAGS = -O3 -fcx-limited-range -fexcess-precision=fast -ffp-contract=fast -fno-math-errno -fno-rounding-math -fno-signaling-nans

OPENMP = yes
CPP_OPENMP_FLAGS = -fopenmp
FPP_OPENMP_FLAGS = -D_OPENMP
F90_OPENMP_FLAGS = -fopenmp

# -fanalyzer: finds only possible null dereferences in std::vector
WARN = yes
CPP_WARN_FLAGS = -Wall
C_WARN_FLAGS =
CXX_WARN_FLAGS =
FPP_WARN_FLAGS = -Wall
F90_WARN_FLAGS = -Wall -Wshadow -Wsurprising

VECTORISE = no

ADIOS2_DIR = /usr/local
ADIOS2_LIBS = adios2_cxx11_mpi adios2_cxx11
AMREX_DIR = /usr/local
# ASDF_CXX_DIR = /usr/local
BLAS_DIR = /usr
BOOST_DIR = /usr
FFTW3_DIR = /usr
GSL_DIR = /usr
HDF5_DIR = /usr/lib/x86_64-linux-gnu/hdf5/serial
HDF5_ENABLE_CXX = yes
HDF5_ENABLE_FORTRAN = yes
HDF5_INC_DIRS = /usr/lib/x86_64-linux-gnu/hdf5/serial/include
HDF5_LIB_DIRS = /usr/lib/x86_64-linux-gnu/hdf5/serial/lib
HDF5_LIBS = hdf5_hl_cpp hdf5_cpp hdf5hl_fortran hdf5_fortran hdf5_hl hdf5
HWLOC_DIR = /usr
# JEMALLOC_DIR = /usr/local
LAPACK_DIR = /usr
# LIBJPEG_DIR = /usr
# LORENE_DIR = /usr/local
MPI_DIR = /usr
NSIMD_DIR = /usr/local
NSIMD_SIMD = AVX2
OPENBLAS_DIR = /usr
OPENPMD_API_DIR = /usr/local
# OPENSSL_DIR = /usr
# PAPI_DIR = /usr/local
PETSC_DIR = /usr/lib/petsc
PETSC_LIBS = petsc_real
PETSC_ARCH_LIBS = m
PTHREADS_DIR = NO_BUILD
# REPRIMAND_DIR = /usr/local
# REPRIMAND_LIBS = RePrimAnd
# RNPLETAL_DIR = /usr/local
SILO_DIR = /usr/local
SIMULATIONIO_DIR = /usr/local
SSHT_DIR = /usr/local
YAML_CPP_DIR = /usr/local
ZLIB_DIR = /usr
